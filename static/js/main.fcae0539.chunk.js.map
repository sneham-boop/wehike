{"version":3,"sources":["images/main-logo.png","images/profile-photo.jpeg","images/large-logo.svg","images/rectangle-logo.svg","hooks/useAppData.js","components/Run/JoinButton.jsx","hooks/userCoords.js","components/ShowRunInfo/RouteMap.jsx","components/ShowRunInfo/index.js","components/Run/index.js","components/Profile/EmptyRuns.jsx","components/Profile/ProfileActions.jsx","components/Profile/index.js","components/Map/Markers.jsx","components/Map/DefaultMap.jsx","components/Map/index.js","components/JoiningStatus.jsx","components/FindRun/index.js","components/RegisterUser.jsx","components/Homepage.jsx","components/SignIn.jsx","components/RegisterRun/AutoComplete.jsx","components/RegisterRun/index.js","components/Navigation.jsx","App.jsx","AppRouter.jsx","index.js"],"names":["module","exports","__webpack_require__","p","persistAtom","recoilPersist","userState","atom","key","default","effects_UNSTABLE","runsState","runnerRunsState","plannerRunsState","useAppData","_useRecoilState","useRecoilState","_useRecoilState2","Object","slicedToArray","_useRecoilState3","_useRecoilState4","runnerRuns","setRunnerRuns","_useRecoilState5","_useRecoilState6","setPlannerRuns","_useRecoilState7","_useRecoilState8","user","setUser","_createRun","asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","planner_id","name","description","address","distance","time","date","lat","lng","address_to","lat_to","lng_to","file","createRunResponse","run","wrap","_context","prev","next","axios","method","url","data","location","location_to","latitude_to","longitude_to","sent","concat","id","headers","Content-Type","status","abrupt","t0","console","log","stop","apply","this","arguments","_registerUser","_callee2","_ref2","email","password","phone","age","gender","runner","planner","registerUserResponse","_user","_context2","useEffect","Promise","all","get","then","response","plannerRuns","catch","error","login","post","logout","joinRun","runner_id","run_id","user_run","canJoinRun","createRun","_x","registerUser","_x2","JoinButton","props","runType","joinStatus","join","_useState","useState","_useState2","text","setText","_useState3","_useState4","buttonStatus","setButtonStatus","useRecoilValue","navigate","useNavigate","react_default","a","createElement","Fragment","type","class","onClick","disabled","userCoordinatesAtom","RouteMap","zoom","from","to","myKey","process","REACT_APP_MAP_API_KEY","handleApiLoaded","mapp","maps","map","Map","document","getElementById","mapId","center","LatLng","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","directionsDisplay","DirectionsRenderer","directionsService","DirectionsService","start","end","route","origin","destination","travelMode","TravelMode","WALKING","DirectionsStatus","OK","setDirections","window","alert","calculateAndDisplayRoute","setMap","setOptions","polylineOptions","strokeColor","strokeWeight","setPanel","initialize","style","height","width","index_modern","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","ShowRunInfo","show","handleClose","latitude","longitude","Modal","className","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","ShowRunInfo_RouteMap","ListGroup","variant","Item","as","event_time","Footer","Button","Run","setTime","_useState5","_useState6","eventTime","setEventTime","_useState7","_useState8","showInfoModal","setShowInfoModal","future_run","alt","src","OverlayTrigger","placement","delay","hide","overlay","Tooltip","assign","ShowRunInfo_ShowRunInfo","EmptyRuns","setType","link","action","headingText","Container","ProfileActions","setAction","handleClick","renderTooltip","onMouseEnter","Profile","_useAppData","minutes","count","runData","setRunData","showRunnersRuns","runs","runsArray","values","length","Run_Run","profilePicture","profilePhoto","parseInt","Table","Tabs","defaultActiveKey","fill","Tab","eventKey","title","Markers","$hover","href","DefaultMap","currentLocation","setCurrentLocation","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","Map_Markers","react_router_dom_dist","Map_DefaultMap","JoiningStatus","joinButtonPressed","setJoinButtonPressed","timer","setTimeout","clearTimeout","logoImage","logo","margin","backdrop","keyboard","Spinner","animation","FindRun","Map_Map","RegisterUser","userData","setUserData","handleChange","e","objectSpread","defineProperty","target","value","handleCheckboxChange","Form","onSubmit","preventDefault","Text","FloatingLabel","controlId","label","Control","required","placeholder","onChange","Feedback","Row","Col","muted","Group","aria-describedby","index","Check","inline","checked","Homepage","squareLogo","SignIn","setEmail","setPassword","useSetRecoilState","AutoComplete","setAddress","locationRef","usePlacesWidget","apiKey","onPlaceSelected","place","formatted_address","geometry","options","types","componentRestrictions","country","fields","inputAutocompleteValue","ref","autoComplete","RegisterRun","Date","getHours","getMinutes","encType","Label","react_datepicker_min_default","selected","event","files","Navigation","Navbar","bg","expand","fluid","Toggle","aria-controls","Collapse","Nav","maxHeight","navbarScroll","pullRight","App","Navigation_Navigation","dist","require","config","REACT_APP_NEW_SECRET","router","createHashRouter","createRoutesFromElements","path","element","Homepage_Homepage","Profile_Profile","FindRun_FindRun","RegisterUser_RegisterUser","ReactDOM","render","es"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6HCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sqNCWhCC,EAAgBC,0BAAhBD,YAEKE,EAAYC,YAAK,CAC5BC,IAAK,YACLC,QAAS,KACTC,iBAAkB,CAACN,KAGRO,EAAYJ,YAAK,CAC5BC,IAAK,YACLC,QAAS,KACTC,iBAAkB,CAACN,KAGRQ,EAAkBL,YAAK,CAClCC,IAAK,kBACLC,QAAS,KACTC,iBAAkB,CAACN,KAGRS,EAAmBN,YAAK,CACnCC,IAAK,mBACLC,QAAS,KACTC,iBAAkB,CAACN,KAGN,SAASU,IAAa,IAAAC,EACXC,YAAeL,GADJM,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAAK,GAAAH,EAAA,GAAAA,EAAA,GAECD,YAAeJ,IAFhBS,EAAAH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAE5BE,EAF4BD,EAAA,GAEhBE,EAFgBF,EAAA,GAAAG,EAGGR,YAAeH,GAHlBY,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGfE,GAHeD,EAAA,GAAAA,EAAA,IAAAE,EAIXX,YAAeV,GAJJsB,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAI5BE,EAJ4BD,EAAA,GAItBE,EAJsBF,EAAA,YAAAG,IAAA,OAAAA,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,IAAAC,KAoFnC,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlB,IAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACElB,EADFD,EACEC,WACAC,EAFFF,EAEEE,KACAC,EAHFH,EAGEG,YACAC,EAJFJ,EAIEI,QACAC,EALFL,EAKEK,SACAC,EANFN,EAMEM,KACAC,EAPFP,EAOEO,KACAC,EARFR,EAQEQ,IACAC,EATFT,EASES,IACAC,EAVFV,EAUEU,WACAC,EAXFX,EAWEW,OACAC,EAZFZ,EAYEY,OACAC,EAbFb,EAaEa,KAbFI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAgBoCC,IAAM,CACpCC,OAAQ,OACRC,IAAK,YACLC,KAAM,CAAEtB,aAAYC,OAAMC,cAAaqB,SAAUpB,EAASC,WAAUC,OAAMC,OAAMC,MAAKC,MAAKgB,YAAaf,EAAYgB,YAAaf,EAAQgB,aAAcf,KAnB5J,cAgBUE,EAhBVG,EAAAW,KAqBYb,EAAQD,EAAkBS,KAA1BR,IArBZE,EAAAE,KAAA,EAsBmCC,IAAM,CACnCC,OAAQ,OACRC,IAAG,cAAAO,OAAgBd,EAAIe,IACvBP,KAAMV,EACNkB,QAAS,CACPC,eAAgB,gBA3BxB,UA8BoC,MA9BpCf,EAAAW,KA8ByBK,OA9BzB,CAAAhB,EAAAE,KAAA,gBAAAF,EAAAiB,OAAA,UA8BgD,GA9BhD,eAAAjB,EAAAiB,OAAA,UA+BW,GA/BX,QAAAjB,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAiCImB,QAAQC,IAARpB,EAAAkB,IAjCJ,yBAAAlB,EAAAqB,SAAAvC,EAAA,mBApFmCwC,MAAAC,KAAAC,WAAA,SAAAC,IAAA,OAAAA,EAAA5D,OAAAc,EAAA,EAAAd,CAAAe,IAAAC,KAyHnC,SAAA6C,EAAAC,GAAA,IAAA1C,EAAA2C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxD,IAAAmB,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cACEjB,EADF0C,EACE1C,KACA2C,EAFFD,EAEEC,MACAC,EAHFF,EAGEE,SACAC,EAJFH,EAIEG,MACAC,EALFJ,EAKEI,IACAC,EANFL,EAMEK,OACAC,EAPFN,EAOEM,OACAC,EARFP,EAQEO,QARFG,EAAApC,KAAA,EAAAoC,EAAAnC,KAAA,EAWuCC,IAAM,CACvCC,OAAQ,OACRC,IAAK,aACLC,KAAM,CACJrB,OACA2C,QACAC,WACAC,QACAC,MACAC,SACAC,SACAC,aAtBR,UAWUC,EAXVE,EAAA1B,KAwBYnC,EAAS2D,EAAqB7B,KAA9B9B,KAC4B,MAAhC2D,EAAqBnB,OAzB7B,CAAAqB,EAAAnC,KAAA,eAAAmC,EAAApB,OAAA,UAyBoD,GAzBpD,cA2BIxC,EAAQD,GA3BZ6D,EAAApB,OAAA,UA4BW,GA5BX,QAAAoB,EAAApC,KAAA,GAAAoC,EAAAnB,GAAAmB,EAAA,SA8BIlB,QAAQC,IAARiB,EAAAnB,IA9BJ,yBAAAmB,EAAAhB,SAAAK,EAAA,mBAzHmCJ,MAAAC,KAAAC,WA2JnC,OAxIAc,oBAAU,WACJ9D,GACF+D,QAAQC,IAAI,CACVrC,IAAMsC,IAAN,oBAAA7B,OAA8BpC,EAAKqC,KACnCV,IAAMsC,IAAN,qBAAA7B,OAA+BpC,EAAKqC,OAEnC6B,KAAK,SAACC,GAAa,IACV1E,EAAe0E,EAAS,GAAGrC,KAA3BrC,WACA2E,EAAgBD,EAAS,GAAGrC,KAA5BsC,YACR1E,EAAcD,GACdI,EAAeuE,KAEhBC,MAAM,SAACC,GACN3B,QAAQC,IAAI0B,MAGjB,CAACtE,IAwHG,CACLuE,MAvHF,SAAenB,EAAOC,GACpB,OAAO1B,IACJ6C,KAAK,aAAc,CAAEpB,QAAOC,aAC5Ba,KAAK,SAACC,GAAa,IACVnE,EAASmE,EAASrC,KAAlB9B,KAER,OADAC,EAAQD,IACD,IAERqE,MAAM,SAACC,GACN3B,QAAQC,IAAI0B,MA+GhBG,OA3GF,WACE,OAAO9C,IACJ6C,KAAK,eACLN,KAAK,WAIJ,OAHAjE,EAAQ,MACRP,EAAc,MACdG,EAAe,MACR,OAERwE,MAAM,SAACC,GACN3B,QAAQC,IAAI0B,MAkGhBI,QAvFF,SAAiBC,EAAWC,GAC1B,OAAOjD,IACJ6C,KAAK,gBAAiB,CAAEG,YAAWC,WACnCV,KAAK,SAACC,GAGL,GAFqBA,EAASrC,KAAtB+C,SAEM,OAAO,IAEtBR,MAAM,SAACC,GACN3B,QAAQC,IAAI0B,MA+EhBQ,WA/FF,SAAoBF,GAClB,OAAKnF,IACaA,EAAWmF,IA8F7BG,UAhKiC,SAAAC,GAAA,OAAA9E,EAAA4C,MAAAC,KAAAC,YAiKjCiC,aAjKiC,SAAAC,GAAA,OAAAjC,EAAAH,MAAAC,KAAAC,aChCtB,SAASmC,EAAWC,GAAO,IAChCC,EAA8BD,EAA9BC,QAASC,EAAqBF,EAArBE,WAAYC,EAASH,EAATG,KADWC,EAEhBC,mBAAS,QAFOC,EAAArG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAEjCG,EAFiCD,EAAA,GAE3BE,EAF2BF,EAAA,GAAAG,EAGAJ,oBAAS,GAHTK,EAAAzG,OAAAC,EAAA,EAAAD,CAAAwG,EAAA,GAGjCE,EAHiCD,EAAA,GAGnBE,EAHmBF,EAAA,GAIlC9F,EAAOiG,YAAexH,GACtByH,EAAWC,cAGjBrC,oBAAU,WACHwB,IACHM,EAAQ,kBACRI,GAAgB,KAEjB,IAOH,OACEI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACe,cAAZlB,GACCe,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLC,MAAM,cACNC,QAXiB,WACnB1G,EAAMuF,IACLW,EAAS,YAURS,SAAUZ,GAETJ,iDC/BHpH,EAAgBC,0BAAhBD,YAEKqI,EAAsBlI,YAAK,CACtCC,IAAK,sBACLC,QAAS,CAAEmC,IAAK,QAASC,KAAM,SAC/BnC,iBAAkB,CAACN,KC6ENsI,EAhFE,SAAAtG,GAAwB,IAArBuG,EAAqBvG,EAArBuG,KAAMC,EAAexG,EAAfwG,KAAMC,EAASzG,EAATyG,GAC9B7H,YAAeyH,GACf,IAAMK,EAAQC,oDAAYC,sBAEpBC,EAAkB,SAACC,EAAMC,GAC7B,IAAIC,EAAMF,GAEV,WACEE,EAAM,IAAID,EAAKE,IAAIC,SAASC,eAAe,YAAa,CACtDC,MAAO,mBACPC,OAAQ,IAAIN,EAAKO,OAAO,SAAU,SAClCf,KAAM,GACNgB,UAAWR,EAAKS,UAAUC,QAC1BC,kBAAkB,IAGpB,IAAIC,EAAoB,IAAIZ,EAAKa,mBAC7BC,EAAoB,IAAId,EAAKe,mBAiBnC,SACEC,EACAC,EACAH,EACAF,GAEAE,EAAkBI,MAChB,CACEC,OAAQH,EACRI,YAAaH,EACbI,WAAYrB,EAAKsB,WAAWC,SAE9B,SAAU1E,EAAU3B,GACdA,IAAW8E,EAAKwB,iBAAiBC,GACnCb,EAAkBc,cAAc7E,GAEhC8E,OAAOC,MAAM,oCAAsC1G,KAhCzD2G,CACE,IAAI7B,EAAKO,OAAOd,EAAKhG,IAAKgG,EAAK/F,KAC/B,IAAIsG,EAAKO,OAAOb,EAAGjG,IAAKiG,EAAGhG,KAC3BoH,EACAF,GAEFA,EAAkBkB,OAAO7B,GACzBW,EAAkBmB,WAAW,CAC3BC,gBAAiB,CACfC,YAAa,YACbC,aAAc,OAGlBtB,EAAkBuB,SAAShC,SAASC,eAAe,aAErDgC,IAwBF,OACEtD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OACEjE,GAAG,WACHsH,MAAO,CACLC,OAAQ,QACRC,MAAO,UAGTzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACEC,iBAAkB,CAChBpL,IAAKsI,GAEP+C,cAAe,CAAEjJ,IAAK,QAASC,KAAM,SACrCiJ,YAAanD,EACboD,oCAAkC,EAClCC,kBAAmB,SAAAhH,GAAA,IAAGoE,EAAHpE,EAAGoE,IAAKD,EAARnE,EAAQmE,KAAR,OAAmBF,EAAgBG,EAAKD,gBCvEtD,SAAS8C,EAAT7J,GAAiD,IAA1Be,EAA0Bf,EAA1Be,IAAK+I,EAAqB9J,EAArB8J,KAAMC,EAAe/J,EAAf+J,YAEzCvD,EAAO,CAAEhG,IAAKO,EAAIiJ,SAAUvJ,IAAKM,EAAIkJ,WACrCxD,EAAK,CAAEjG,IAAKO,EAAIW,YAAajB,IAAKM,EAAIY,cAE5C,OACEkE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACEC,UAAU,YACVL,KAAMA,EACNM,OAAQL,EACRM,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,GAER1E,EAAAC,EAAAC,cAACmE,EAAA,EAAMM,OAAP,CAAcL,UAAU,qBAAqBM,aAAW,GACtD5E,EAAAC,EAAAC,cAACmE,EAAA,EAAMQ,MAAP,CACE5I,GAAG,gCACHqI,UAAU,eAETpJ,EAAIb,OAGT2F,EAAAC,EAAAC,cAACmE,EAAA,EAAMS,KAAP,CAAYR,UAAU,uBACpBtE,EAAAC,EAAAC,cAAA,SAAIhF,EAAIZ,aACR0F,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,YACbtE,EAAAC,EAAAC,cAAC6E,EAAD,CAAUrE,KAzBP,GAyBmBC,KAAMA,EAAMC,GAAIA,IACtCZ,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,QAAQ,SACjBjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAUE,KAAX,CAAgBC,GAAG,MAAnB,mBACAnF,EAAAC,EAAAC,cAAC8E,EAAA,EAAUE,KAAX,WACMhK,EAAIR,KADV,OACoBQ,EAAIkK,YAExBpF,EAAAC,EAAAC,cAAC8E,EAAA,EAAUE,KAAX,eAAwBhK,EAAIS,UAC5BqE,EAAAC,EAAAC,cAAC8E,EAAA,EAAUE,KAAX,gBAAyBhK,EAAIU,aAC7BoE,EAAAC,EAAAC,cAAC8E,EAAA,EAAUE,KAAX,kBAA2BhK,EAAIV,SAA/B,SAINwF,EAAAC,EAAAC,cAACmE,EAAA,EAAMgB,OAAP,KACErF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAQhF,QAAS4D,GAAjB,YCrCK,SAASqB,EAAIvG,GAAO,IACzB9D,EAAgC8D,EAAhC9D,IAAKkF,EAA2BpB,EAA3BoB,KAAM1B,EAAqBM,EAArBN,WAAYS,EAASH,EAATG,KADEC,EAEGC,mBAASX,EAAWxD,EAAIe,MAAO,GAFlCqD,EAAArG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAE1BF,EAF0BI,EAAA,GAAAG,GAAAH,EAAA,GAGTD,mBAAS,KAHAK,EAAAzG,OAAAC,EAAA,EAAAD,CAAAwG,EAAA,GAG1BhF,EAH0BiF,EAAA,GAGpB8F,EAHoB9F,EAAA,GAAA+F,EAICpG,mBAAS,IAJVqG,EAAAzM,OAAAC,EAAA,EAAAD,CAAAwM,EAAA,GAI1BE,EAJ0BD,EAAA,GAIfE,EAJeF,EAAA,GAAAG,EAMSxG,oBAAS,GANlByG,EAAA7M,OAAAC,EAAA,EAAAD,CAAA4M,EAAA,GAM1BE,EAN0BD,EAAA,GAMXE,EANWF,EAAA,GAkCjC,OAZApI,oBAAU,WACS,IAAbxC,EAAIT,MAAuB,aAAT2F,GACpBoF,EAAO,GAAAxJ,OAAId,EAAIT,KAAR,SAELS,EAAI+K,YACNL,EAAY,GAAA5J,OAAId,EAAIR,KAAR,QAAAsB,OAAmBd,EAAIkK,aAEhClK,EAAI+K,YACPL,EAAY,UAAA5J,OAAWd,EAAIR,KAAf,QAAAsB,OAA0Bd,EAAIkK,cAE3C,IAGDpF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,WAASoE,UAAU,OACjBtE,EAAAC,EAAAC,cAAA,OACEgG,IAAI,sBACJ5B,UAAU,YACV6B,IAAG,mBAAAnK,OAAqBd,EAAIe,MAG9B+D,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,YACbtE,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,eACH,cAATlE,GACCJ,EAAAC,EAAAC,cAAA,QAAMjE,GAAE,OAAAD,OAASd,EAAIe,IAAMqI,UAAU,UAClCpJ,EAAIe,IAGT+D,EAAAC,EAAAC,cAAA,UAAKhF,EAAIb,MAET2F,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACEC,UAAU,OACVC,MAAO,CAAErC,KAAM,IAAKsC,KAAM,IAC1BC,QAxCU,SAACxH,GAAD,OACpBgB,EAAAC,EAAAC,cAACuG,EAAA,EAADxN,OAAAyN,OAAA,CAASzK,GAAG,kBAAqB+C,GAC/BgB,EAAAC,EAAAC,cAAA,sBAAchF,EAAIR,MAClBsF,EAAAC,EAAAC,cAAA,8BAuCQF,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLkE,UAAU,gBACVhE,QAjDc,WAC1B0F,GAAiB,KA6CP,aASJhG,EAAAC,EAAAC,cAAA,SAAIhF,EAAIZ,aACR0F,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,YACbtE,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,QAAQ,SACjBjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAUE,KAAX,KAAgBlF,EAAAC,EAAAC,cAAA,uBAAhB,IAAwCyF,GACxC3F,EAAAC,EAAAC,cAAC8E,EAAA,EAAUE,KAAX,KAAgBlF,EAAAC,EAAAC,cAAA,2BAAhB,IAA4ChF,EAAIV,SAAhD,OACCC,GAAQuF,EAAAC,EAAAC,cAAC8E,EAAA,EAAUE,KAAX,KAAgBlF,EAAAC,EAAAC,cAAA,gCAAhB,IAAiDzF,IAE5DuF,EAAAC,EAAAC,cAACnB,EAAD,CAAYE,QAASmB,EAAMlB,WAAYA,EAAYC,KAAMA,OAI/Da,EAAAC,EAAAC,cAACyG,EAAD,CACEzL,IAAKA,EACL+I,KAAM8B,EACN7B,YAxEuB,WAC3B8B,GAAiB,mBCbN,SAASY,EAAU5H,GAChC,IAAMc,EAAWC,cADsBX,EAEfC,mBAAS,IAFMC,EAAArG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAEhCgB,EAFgCd,EAAA,GAE1BuH,EAF0BvH,EAAA,GAyBvC,OAjBA5B,oBAAU,WACW,aAAfsB,EAAMoB,MACRyG,EAAQ,CACNC,KAAM,QACNC,OAAQ,OACRC,YACE,oFAEa,YAAfhI,EAAMoB,MACRyG,EAAQ,CACNC,KAAM,UACNC,OAAQ,OACRC,YACE,kEAEL,CAAChI,EAAMoB,OAGRJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAW3C,UAAU,wBACnBtE,EAAAC,EAAAC,cAAA,UAAKE,EAAK4G,aACVhH,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEhB,UAAU,MACVW,QAAQ,SACR3E,QA5BY,WAClBR,EAASM,EAAK0G,QA6BP1G,EAAK2G,UCjCD,SAASG,EAAelI,GACrC,IAAMc,EAAWC,cAD2BX,EAEhBC,mBAAS,IAFOC,EAAArG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAErC2H,EAFqCzH,EAAA,GAE7B6H,EAF6B7H,EAAA,GAItC8H,EAAc,SAACN,GACnBhH,EAASgH,IAGLO,EAAgB,SAACrI,GAAD,OACpBgB,EAAAC,EAAAC,cAACuG,EAAA,EAADxN,OAAAyN,OAAA,CAASzK,GAAG,kBAAqB+C,GAC9B+H,IAIL,OACE/G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAW3C,UAAU,mBACnBtE,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACEC,UAAU,OACVC,MAAO,CAAErC,KAAM,IAAKsC,KAAM,IAC1BC,QAASa,GAETrH,EAAAC,EAAAC,cAAA,QACEoE,UAAU,2BACVhE,QAAS,kBAAM8G,EAAY,YAC3BE,aAAc,kBAAIH,EAAU,gBAH9B,eAQFnH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACEC,UAAU,OACVC,MAAO,CAAErC,KAAM,IAAKsC,KAAM,IAC1BC,QAASa,GAETrH,EAAAC,EAAAC,cAAA,QACEoE,UAAU,2BACVhE,QAAS,kBAAM8G,EAAY,UAC3BE,aAAc,kBAAIH,EAAU,gBAH9B,2ECvBK,SAASI,IACtB,IAAM3N,EAAOiG,YAAexH,GACtBgB,EAAawG,YAAelH,GAC5BqF,EAAc6B,YAAejH,GAHH4O,EAIA3O,IAAxByF,EAJwBkJ,EAIxBlJ,QAASI,EAJe8I,EAIf9I,WAJeU,EAKFC,mBAAS,CAAE7E,SAAU,EAAGiN,QAAS,EAAGC,MAAO,IALzCpI,EAAArG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAKzBuI,EALyBrI,EAAA,GAKhBsI,EALgBtI,EAAA,GAQ1BuI,EAAkB,SAACC,EAAM1H,GAC7B,IAAM2H,EAAY9O,OAAO+O,OAAOF,GAChC,OAAyB,IAArBC,EAAUE,OAAqBjI,EAAAC,EAAAC,cAAC0G,EAAD,CAAWxG,KAAMA,IAC7C2H,EAAU5G,IAAI,SAACjG,GAAD,OACnB8E,EAAAC,EAAAC,cAACgI,EAAD,CACE3P,IAAK2C,EAAIe,GACTf,IAAKA,EACLkF,KAAMA,EACNjB,KAAMb,EACNI,WAAYA,OAKZyJ,EACJnI,EAAAC,EAAAC,cAAA,OACEoE,UAAU,cACV6B,IAAKiC,IACLlC,IAAI,iBAkBR,OAdAxI,oBAAU,WACR,IAAIlD,EAAW,EACbiN,EAAU,EACVC,EAAQ,EACV,IAAK,IAAMnP,KAAOc,GACmB,IAA/BA,EAAWd,GAAK0N,aAClBzL,GAAY6N,SAAShP,EAAWd,GAAKiC,UACrCiN,GAAWY,SAAShP,EAAWd,GAAKkC,MACpCiN,GAAS,GAGbE,EAAW,CAAEpN,WAAUiN,UAASC,WAC/B,CAACrO,IAGF2G,EAAAC,EAAAC,cAAA,QAAMoE,UAAU,mBACdtE,EAAAC,EAAAC,cAAA,WAASoE,UAAU,kBACjBtE,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,gBACbtE,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,mBACbtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACCtG,GAAQoG,EAAAC,EAAAC,cAAA,SAAItG,EAAKS,OAEpB2F,EAAAC,EAAAC,cAACgH,EAAD,OAEFlH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAO9D,KAAK,MACVxE,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,wBAGJF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACGyH,EAAQF,QACTzH,EAAAC,EAAAC,cAAA,QAAMoE,UAAU,QAAhB,QAEFtE,EAAAC,EAAAC,cAAA,UACGyH,EAAQnN,SACTwF,EAAAC,EAAAC,cAAA,QAAMoE,UAAU,QAAhB,OAEFtE,EAAAC,EAAAC,cAAA,UACGyH,EAAQD,MACT1H,EAAAC,EAAAC,cAAA,QAAMoE,UAAU,QAAhB,aAMT6D,GAGHnI,EAAAC,EAAAC,cAAA,WAASoE,UAAU,iBACjBtE,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CACEC,iBAAiB,WACjBvM,GAAG,cACHqI,UAAU,OACVmE,MAAI,GAEJzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,YAC7B5I,EAAAC,EAAAC,cAAA,WAASoE,UAAU,YAChBjL,GAAcwO,EAAgBxO,EAAY,cAG/C2G,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,WAC5B5I,EAAAC,EAAAC,cAAA,WAASoE,UAAU,YAChBtG,GAAe6J,EAAgB7J,EAAa,mCClF5C6K,UA9BC,SAAA1O,GAAiD,IAA9C8B,EAA8C9B,EAA9C8B,GAAI6M,EAA0C3O,EAA1C2O,OAAQxO,EAAkCH,EAAlCG,YAAaE,EAAqBL,EAArBK,SAAUE,EAAWP,EAAXO,KAWpD,OACEsF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACEC,UAAU,OACVC,MAAO,CAAErC,KAAM,IAAKsC,KAAM,KAC1BC,QAdkB,SAACxH,GAAD,OACpBgB,EAAAC,EAAAC,cAACuG,EAAA,EAADxN,OAAAyN,OAAA,CAASzK,GAAG,kBAAqB+C,GAC/BgB,EAAAC,EAAAC,cAAA,SACG5F,EACAE,GAAQ,KAAAwB,OAASxB,EAAT,OAEXwF,EAAAC,EAAAC,cAAA,SAAIxF,GAAI,SAAAsB,OAAatB,OAUrBsF,EAAAC,EAAAC,cAAA,KAAG6I,KAAI,QAAA/M,OAAUC,IACf+D,EAAAC,EAAAC,cAAA,OACEoE,UAAWwE,EAAS,eAAiB,UAErC9I,EAAAC,EAAAC,cAAA,QAAMoE,UAAU,cACbrI,QCoCE+M,EAvDI,SAAA7O,GAAsB,IAAnBqH,EAAmBrH,EAAnBqH,OAAQd,EAAWvG,EAAXuG,KAAW5H,EAGrCC,YAAeyH,GAHsBxH,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEhCmQ,EAFgCjQ,EAAA,GAEfkQ,EAFelQ,EAAA,GAqBjC6H,EAAQC,oDAAYC,sBAU1B,OATArD,oBAAU,WAENyL,UAAUC,YAAYC,mBAAmB,SAACC,GAAa,IAAAC,EACrBD,EAASE,OAAjCrF,EAD6CoF,EAC7CpF,SAAUC,EADmCmF,EACnCnF,UAClB8E,EAAmB,CAAEvO,IAAKwJ,EAAUvJ,IAAKwJ,OAI5C,IAEDpE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,MAAMf,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SACnDzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACEC,iBAAkB,CAChBpL,IAAKsI,GAEP+C,cAAe,CAAEjJ,IAAK,QAASC,KAAM,SACrC4G,OAAQyH,EACRpF,YAAanD,GAEbV,EAAAC,EAAAC,cAACuJ,EAAD,CACE9O,IAAK6G,EAAO7G,IACZC,IAAK4G,EAAO5G,IACZqB,GAAG,KACH3B,YAAY,sBC9CT,SAAS8G,IACtB,IAAMI,EAAS3B,YAAeW,GAG9B,OACER,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,gBAAgBf,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SAC7DzD,EAAAC,EAAAC,cAAA,WAASoE,UAAU,YACjBtE,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qJAKAF,EAAAC,EAAAC,cAAA,KAAG6I,KAAK,mBACN/I,EAAAC,EAAAC,cAAA,QAAMoE,UAAU,4BAAhB,gBAIFtE,EAAAC,EAAAC,cAAA,gDAAuCF,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAM9I,GAAG,WAAT,QAAvC,MAEFZ,EAAAC,EAAAC,cAACyJ,EAAD,CAAYnI,OAAQA,EAAQd,KAnBrB,sCCJA,SAASkJ,EAAc5K,GAAO,IACnC6K,EAA4C7K,EAA5C6K,kBAAmBC,EAAyB9K,EAAzB8K,qBACnBvK,EAASP,EAATO,KACFO,EAAWC,cAEjBrC,oBAAU,WACR,IAA0B,IAAtBmM,EAA4B,CAC9B,IAAIE,EAAQC,WAAW,WACrBF,GAAqB,GACrBhK,EAAS,aACR,KACH,OAAO,kBAAMmK,aAAaF,MAE3B,CAACF,IAEJ,IAAMK,EACJlK,EAAAC,EAAAC,cAAA,OACEoE,UAAU,cACV6B,IAAKgE,IACL1G,MAAM,OACND,OAAO,OACPD,MAAO,CAAC6G,OAAO,UACflE,IAAI,2BAIR,OACElG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACEC,UAAU,uBACVE,KAAK,KACLP,KAAM4F,EACNQ,SAAS,SACTC,UAAU,GAEVtK,EAAAC,EAAAC,cAACmE,EAAA,EAAMM,OAAP,CAAcL,UAAU,yBACrB4F,EACDlK,EAAAC,EAAAC,cAACmE,EAAA,EAAMQ,MAAP,sBAA4BtF,EAA5B,WACC2K,GAEHlK,EAAAC,EAAAC,cAACmE,EAAA,EAAMS,KAAP,CAAYR,UAAU,0BACpBtE,EAAAC,EAAAC,cAAA,6JAKAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAASjG,UAAU,iBAAiBkG,UAAU,qBC3CzC,SAASC,IAuCtB,OACEzK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,WAASjE,GAAG,iBACV+D,EAAAC,EAAAC,cAACwK,EAAD,MACA1K,EAAAC,EAAAC,cAAA,WAASjE,GAAG,kBACV+D,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,4XC5CK,SAASyK,KAAe,IAE7B9L,EAAiBhG,IAAjBgG,aAF6BO,EAILC,mBAAS,CACvChF,KAAM,GACN2C,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,IAAK,GACLE,QAAQ,EACRC,SAAS,IAX0BgC,EAAArG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAI9BwL,EAJ8BtL,EAAA,GAIpBuL,EAJoBvL,EAAA,GAa/BwL,EAAe,SAACC,GACpBF,EAAY5R,OAAA+R,EAAA,EAAA/R,CAAA,GAAK2R,EAAN3R,OAAAgS,EAAA,EAAAhS,CAAA,GAAiB8R,EAAEG,OAAO7Q,KAAO0Q,EAAEG,OAAOC,UAGjDC,EAAuB,SAACL,GAC5B,IAAM1P,EAAOuP,EAASG,EAAEG,OAAO7Q,MAC/BwQ,EAAY5R,OAAA+R,EAAA,EAAA/R,CAAA,GAAK2R,EAAN3R,OAAAgS,EAAA,EAAAhS,CAAA,GAAiB8R,EAAEG,OAAO7Q,MAAQgB,MAGzCyE,EAAWC,cA2CjB,OACEC,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,SACbtE,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CACE/G,UAAU,iBACVgH,SA7Ce,SAACP,GACpBA,EAAEQ,iBACF1M,EAAa+L,GACb9K,EAAS,cA4CLE,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,uBACbtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKG,KAAN,CAAWrG,GAAG,MAAd,qBACAnF,EAAAC,EAAAC,cAACmL,EAAA,EAAKG,KAAN,CAAWrG,GAAG,KAAd,2FAKFnF,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAeC,UAAU,gBAAgBC,MAAM,OAAOrH,UAAU,QAC9DtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRzL,KAAK,OACL0L,YAAY,uBACZzR,KAAK,OACL8Q,MAAOP,EAASvQ,KAChB0R,SAAUjB,IAEZ9K,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,oBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,qBAIFJ,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAeC,UAAU,gBAAgBC,MAAM,QAAQrH,UAAU,QAC/DtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRxR,KAAK,QACL+F,KAAK,QACL0L,YAAY,mBACZX,MAAOP,EAAS5N,MAChB+O,SAAUjB,IAEZ9K,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,oBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,iCAIFJ,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CACEC,UAAU,mBACVC,MAAM,WACNrH,UAAU,QAEVtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRzL,KAAK,WACL/F,KAAK,WACLyR,YAAY,WACZX,MAAOP,EAAS3N,SAChB8O,SAAUjB,IAEZ9K,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,uBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,4BAIFJ,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,KACEjM,EAAAC,EAAAC,cAACgM,GAAA,EAAD,KACElM,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAeC,UAAU,QAAQC,MAAM,QAAQrH,UAAU,QACvDtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRzL,KAAK,OACL0L,YAAY,QACZzR,KAAK,QACL8Q,MAAOP,EAAS1N,MAChB6O,SAAUjB,IAEZ9K,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,gBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,iCAKJJ,EAAAC,EAAAC,cAACgM,GAAA,EAAD,KACElM,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CACEC,UAAU,gBACVC,MAAM,MACNrH,UAAU,QAEVtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRzL,KAAK,OACL0L,YAAY,MACZzR,KAAK,MACL8Q,MAAOP,EAASzN,IAChB4O,SAAUjB,IAEZ9K,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,6BAGAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,uBAGe,MAjIvBJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACmL,EAAA,EAAKG,KAAN,CAAWvP,GAAG,mBAAmBkQ,OAAK,GAAtC,WAGAnM,EAAAC,EAAAC,cAACmL,EAAA,EAAKe,MAAN,CACE/R,KAAK,SACLiK,UAAU,OACVoH,UAAU,oBACVW,mBAAiB,oBAEhB,CAAC,SAAU,UAAW,YAAa,uBAAuBlL,IACzD,SAACwK,EAAOW,GACN,OACEtM,EAAAC,EAAAC,cAACmL,EAAA,EAAKkB,MAAN,CACEV,UAAQ,EACRW,QAAM,EACNjU,IAAKoT,EACLA,MAAOA,EACPtR,KAAK,SACL+F,KAAK,QACLnE,GAAE,gBAAAD,OAAkBsQ,GACpBnB,MAAOQ,EACPc,QAAS7B,EAASxN,SAAWuO,EAC7BI,SAAUjB,QA+GpB9K,EAAAC,EAAAC,cAACmL,EAAA,EAAKG,KAAN,CAAWvP,GAAG,mBAAmBkQ,OAAK,GAAtC,mBAGAnM,EAAAC,EAAAC,cAACmL,EAAA,EAAKe,MAAN,CACE9H,UAAU,OACVoH,UAAU,oBACVW,mBAAiB,oBAEjBrM,EAAAC,EAAAC,cAACmL,EAAA,EAAKkB,MAAN,CACEC,QAAM,EACNb,MAAM,SACNvL,KAAK,WACLnE,GAAE,oBACF5B,KAAK,SACLoS,QAAS7B,EAASvN,OAClB0O,SAAUX,IAEZpL,EAAAC,EAAAC,cAACmL,EAAA,EAAKkB,MAAN,CACEC,QAAM,EACNb,MAAM,UACNvL,KAAK,WACLnE,GAAE,oBACF5B,KAAK,UACLoS,QAAS7B,EAAStN,QAClByO,SAAUX,KAIdpL,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAQL,QAAQ,SAAS7E,KAAK,SAASkE,UAAU,OAAjD,iECtMO,SAASoI,KACtB,OACE1M,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,QACbtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,cACbtE,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,qIAKFF,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,gBACbtE,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAMpF,UAAU,YAAY1D,GAAG,SAC7BZ,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,aAAf,QACAtE,EAAAC,EAAAC,cAAA,6CAEFF,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAMpF,UAAU,YAAY1D,GAAG,WAC7BZ,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,aAAf,QACAtE,EAAAC,EAAAC,cAAA,0CAINF,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,kBACbtE,EAAAC,EAAAC,cAAA,OAAKiG,IAAKgE,KAAM7F,UAAU,OAAO4B,IAAI,SACrClG,EAAAC,EAAAC,cAAA,OAAKiG,IAAKwG,KAAYrI,UAAU,cAAc4B,IAAI,YCpB7C,SAAS0G,KAAS,IAAAxN,EAELC,mBAAS,IAFJC,EAAArG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAExBpC,EAFwBsC,EAAA,GAEjBuN,EAFiBvN,EAAA,GAAAG,EAGCJ,mBAAS,IAHVK,EAAAzG,OAAAC,EAAA,EAAAD,CAAAwG,EAAA,GAGxBxC,EAHwByC,EAAA,GAGdoN,EAHcpN,EAAA,GAIvBvB,EAAUtF,IAAVsF,MAEF2B,GADUiN,YAAkB1U,GACjB0H,eAUjB,OACEC,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,SACbtE,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAM/G,UAAU,qCAAqCgH,SAVpC,SAACP,GACpBA,EAAEQ,iBACFpN,EAAMnB,EAAOC,GACZa,KAAK,SAAC1B,GACLA,GAAU0D,EAAQ,gBAOhBE,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,uBACbtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKG,KAAN,CAAWrG,GAAG,MAAd,yBACAnF,EAAAC,EAAAC,cAACmL,EAAA,EAAKG,KAAN,CAAWrG,GAAG,KAAd,4CAEFnF,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAeC,UAAU,gBAAgBC,MAAM,QAAQrH,UAAU,QAC/DtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRzL,KAAK,QACL0L,YAAY,mBACZX,MAAOnO,EACP+O,SAAU,SAAChB,GAAD,OAAO8B,EAAS9B,EAAEG,OAAOC,WAGvCnL,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CACEC,UAAU,mBACVC,MAAM,WACNrH,UAAU,QAEVtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRzL,KAAK,WACL0L,YAAY,WACZX,MAAOlO,EACP8O,SAAU,SAAChB,GAAD,OAAO+B,EAAY/B,EAAEG,OAAOC,WAG1CnL,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAQL,QAAQ,SAAS7E,KAAK,SAASkE,UAAU,OAAjD,WAGAtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKG,KAAN,CAAWrG,GAAG,MAAMb,UAAU,yBAA9B,qCAAwFtE,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAM9I,GAAG,aAAT,QAAxF,mDCxDO,SAASoM,GAAahO,GACnC,IAAM6B,EAAQC,oDAAYC,sBAClBkM,EAAejO,EAAfiO,WACKC,EAAgBC,2BAAgB,CAC3CC,OAAQvM,EACRwM,gBAAiB,SAACC,GAChBL,EACEK,EAAMC,kBACND,EAAME,SAAS7R,SAAShB,MACxB2S,EAAME,SAAS7R,SAASf,QAG5B6S,QAAS,CACPC,MAAO,CAAC,QACRC,sBAAuB,CAAEC,QAAS,MAClCC,OAAQ,CAAC,OAAQ,oBAAqB,aAExCC,uBAAwB,SAdlBC,IAgBR,OACE/N,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRzL,KAAK,OACL2N,IAAKb,EACLpB,YAAY,YACZkC,aAAa,UCZN,SAASC,KAGtB,IAAMrU,EAAOiG,YAAexH,GAHQ+G,EAIcC,oBAAS,GAJvBC,EAAArG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAI7ByK,EAJ6BvK,EAAA,GAIVwK,EAJUxK,EAAA,GAAAG,EAMNJ,mBAAS,CACrCjF,WAAY,GACZC,KAAM,GACNC,YAAa,GACbE,SAAU,GACVC,KAAI,GAAAuB,QAAK,IAAIkS,MAAOC,WAAhB,KAAAnS,QAA8B,IAAIkS,MAAOE,cAC7C1T,KAAM,IAAIwT,KACVlT,KAAM,GACNL,IAAK,GACLC,IAAK,GACLL,QAAS,GACTO,OAAQ,GACRC,OAAQ,GACRF,WAAY,KAnBsB6E,EAAAzG,OAAAC,EAAA,EAAAD,CAAAwG,EAAA,GAM7BkI,EAN6BjI,EAAA,GAMpBkI,EANoBlI,EAAA,GAuB9BI,EAAWC,cACTpB,EAAc9F,IAAd8F,UAEFmM,EAAe,SAACC,GACpBnD,EAAW3O,OAAA+R,EAAA,EAAA/R,CAAA,GAAK0O,EAAN1O,OAAAgS,EAAA,EAAAhS,CAAA,GAAgB8R,EAAEG,OAAO7Q,KAAO0Q,EAAEG,OAAOC,UAsErD,OATAzN,oBAAU,WACH9D,GACHkG,EAAS,WAEPlG,GACFgO,EAAW3O,OAAA+R,EAAA,EAAA/R,CAAA,GAAK0O,EAAN,CAAevN,WAAYR,EAAKqC,OAE3C,IAGD+D,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,SACbtE,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CACE/G,UAAU,iBACV+J,QAAQ,sBACR/C,SAvEe,SAACP,GACpBA,EAAEQ,iBAUe5M,EAAU1F,OAAA+R,EAAA,EAAA/R,CAAA,GAAK0O,KACpBmC,GAAqB,KA6D7B9J,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,uBACbtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKG,KAAN,CAAWrG,GAAG,MAAd,gBACAnF,EAAAC,EAAAC,cAACmL,EAAA,EAAKG,KAAN,CAAWrG,GAAG,KAAd,uFAKFnF,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAeC,UAAU,OAAOC,MAAM,OAAOrH,UAAU,QACrDtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRzL,KAAK,OACL0L,YAAY,OACZzR,KAAK,OACL8Q,MAAOxD,EAAQtN,KACf0R,SAAUjB,IAEZ9K,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,oBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,8BAIFJ,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CACEC,UAAU,cACVC,MAAM,cACNrH,UAAU,QAEVtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACR1G,GAAG,WACH/E,KAAK,OACL/F,KAAK,cACLyR,YAAY,cACZX,MAAOxD,EAAQrN,YACfyR,SAAUjB,IAEZ9K,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,oBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,gFAMFJ,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,KACEjM,EAAAC,EAAAC,cAACgM,GAAA,EAAD,KACElM,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CACEC,UAAU,WACVC,MAAM,UACNrH,UAAU,QAEVtE,EAAAC,EAAAC,cAAC8M,GAAD,CACEC,WAAY,SAAC1S,EAASI,EAAKC,GAAf,OACVgN,EAAW,SAACvM,GACV,OAAOpC,OAAA+R,EAAA,EAAA/R,CAAA,GAAKoC,EAAZ,CAAkBd,QAASA,EAASI,IAAKA,EAAKC,IAAKA,SAIzDoF,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,oBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,4BAKJJ,EAAAC,EAAAC,cAACgM,GAAA,EAAD,KACElM,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAeC,UAAU,WAAWC,MAAM,QAAQrH,UAAU,QAC1DtE,EAAAC,EAAAC,cAAC8M,GAAD,CACEC,WAAY,SAAC1S,EAASI,EAAKC,GAAf,OACVgN,EAAW,SAACvM,GACV,OAAOpC,OAAA+R,EAAA,EAAA/R,CAAA,GACFoC,EADL,CAEER,WAAYN,EACZO,OAAQH,EACRI,OAAQH,SAKhBoF,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,oBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,6BAMNJ,EAAAC,EAAAC,cAACmL,EAAA,EAAKe,MAAN,CAAYV,UAAU,WAAWpH,UAAU,QACzCtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKiD,MAAN,iBAxHJtO,EAAAC,EAAAC,cAAA,OAAKoE,UAAU,QACZ,CAAC,EAAG,EAAG,IAAInD,IAAI,SAACwK,EAAOW,GACtB,OACEtM,EAAAC,EAAAC,cAACmL,EAAA,EAAKkB,MAAN,CACEV,UAAQ,EACRtT,IAAKoT,EACLa,QAAM,EACNpM,KAAK,QACLnE,GAAE,kBAAAD,OAAoBsQ,GACtBX,MAAK,GAAA3P,OAAK2P,EAAL,KACLR,MAAOQ,EACPtR,KAAK,WACL0R,SAAUjB,QAgHhB9K,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,KACEjM,EAAAC,EAAAC,cAACgM,GAAA,EAAD,KA7IJlM,EAAAC,EAAAC,cAACmL,EAAA,EAAKe,MAAN,CAAYV,UAAU,OAAOpH,UAAU,OAAOf,MAAO,CAAEE,MAAO,SAC5DzD,EAAAC,EAAAC,cAACmL,EAAA,EAAKiD,MAAN,aACAtO,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CACEqE,UAAU,cACVuH,UAAQ,EACRxR,KAAK,OACLmU,SAAU7G,EAAQjN,KAClBqR,SAAU,SAACrR,GAAD,OAAUkN,EAAW3O,OAAA+R,EAAA,EAAA/R,CAAA,GAAK0O,EAAN,CAAejN,KAAMA,MACnDnC,IAAKoP,EAAQjN,SAsIbsF,EAAAC,EAAAC,cAACgM,GAAA,EAAD,KACElM,EAAAC,EAAAC,cAACmL,EAAA,EAAKe,MAAN,CAAYV,UAAU,OAAOpH,UAAU,QACrCtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKiD,MAAN,aACAtO,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRtT,IAAKoP,EAAQlN,KACb2F,KAAK,OACL/F,KAAK,OACLyR,YAAY,OACZX,MAAOxD,EAAQlN,KACfsR,SAAU,SAAC0C,GAAD,OACR7G,EAAW3O,OAAA+R,EAAA,EAAA/R,CAAA,GAAK0O,EAAN,CAAelN,KAAMgU,EAAMvD,OAAOC,YAGhDnL,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,oBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,0BAMNJ,EAAAC,EAAAC,cAACmL,EAAA,EAAKe,MAAN,CAAYV,UAAU,aAAapH,UAAU,QAC3CtE,EAAAC,EAAAC,cAACmL,EAAA,EAAKiD,MAAN,wBACAtO,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRxR,KAAK,OACL+F,KAAK,OACL2L,SAAU,SAAChB,GAAD,OACRnD,EAAW3O,OAAA+R,EAAA,EAAA/R,CAAA,GAAK0O,EAAN,CAAe3M,KAAM+P,EAAEG,OAAOwD,MAAM,SAGlD1O,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,oBACAhM,EAAAC,EAAAC,cAACmL,EAAA,EAAKO,QAAQI,SAAd,CAAuB5L,KAAK,WAA5B,kCAIFJ,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAQL,QAAQ,SAAS7E,KAAK,SAASkE,UAAU,OAAjD,WAIFtE,EAAAC,EAAAC,cAAC0J,EAAD,CACIC,kBAAmBA,EACnBC,qBAAsBA,EACtBvK,KAAK,6CCpPA,SAASoP,KACtB,IAAM/U,EAAOiG,YAAexH,GACtByH,EAAWC,cACT1B,EAAWxF,IAAXwF,OAUR,OACE2B,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAQ3S,GAAG,aAAa4S,GAAG,QAAQC,OAAO,MACxC9O,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAW8H,OAAK,GACd/O,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAMpF,UAAU,eAAe1D,GAAG,KAChCZ,EAAAC,EAAAC,cAAA,OACEiG,IAAKgE,IACL7F,UAAU,2BACV4B,IAAI,UAGRlG,EAAAC,EAAAC,cAAC0O,GAAA,EAAOI,OAAR,CAAeC,gBAAc,iBAC7BjP,EAAAC,EAAAC,cAAC0O,GAAA,EAAOM,SAAR,CAAiBjT,GAAG,gBAClB+D,EAAAC,EAAAC,cAACiP,GAAA,EAAD,CACE7K,UAAU,uBACVf,MAAO,CAAE6L,UAAW,SACpBC,cAAY,GAEZrP,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAMpF,UAAU,WAAW1D,GAAG,KAA9B,QAGAZ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAMpF,UAAU,WAAW1D,GAAG,SAA9B,eAIFZ,EAAAC,EAAAC,cAACiP,GAAA,EAAD,CAAKG,WAAS,GACF,OAAT1V,GACCoG,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAMpF,UAAU,WAAW1D,GAAG,WAA9B,WAIQ,OAAThH,GACCoG,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAMpF,UAAU,WAAW1D,GAAG,aAA9B,WAKQ,OAAThH,GACCoG,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAMpF,UAAU,WAAW1D,GAAG,YAA9B,WAIQ,OAAThH,GACCoG,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAMpF,UAAU,WAAW1D,GAAG,IAAIN,QAlD9B,WACdjC,IAASP,KAAK,SAAC1B,GACE,OAAXA,GACF0D,EAAS,SA+CH,gBC3DC,SAASyP,KACtB,OACEvP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsP,GAAD,MACAxP,EAAAC,EAAAC,cAACuP,EAAA,EAAD,OANNC,EAAQ,KAAUC,SAClBpT,QAAQC,IAAIsE,oDAAY8O,sBCWjB,IAAMC,GAASC,YACpBC,YACE/P,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOO,KAAK,IAAIC,QAASjQ,EAAAC,EAAAC,cAACqP,GAAD,OACvBvP,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOnD,OAAK,EAAC2D,QAASjQ,EAAAC,EAAAC,cAACgQ,GAAD,QAEtBlQ,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOO,KAAK,WAAWC,QAASjQ,EAAAC,EAAAC,cAACiQ,EAAD,QAChCnQ,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOO,KAAK,QAAQC,QAASjQ,EAAAC,EAAAC,cAACkQ,EAAD,QAC7BpQ,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOO,KAAK,YAAYC,QAASjQ,EAAAC,EAAAC,cAACmQ,GAAD,QACjCrQ,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOO,KAAK,UAAUC,QAASjQ,EAAAC,EAAAC,cAAC+N,GAAD,QAC/BjO,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOO,KAAK,UAAUC,QAASjQ,EAAAC,EAAAC,cAAC0M,GAAD,QAC/B5M,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOO,KAAK,YAAYC,QAASjQ,EAAAC,EAAAC,cAACyG,EAAD,WCpBvC2J,IAASC,OACPvQ,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,KACExQ,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAgBI,OAAQA,MAE1BxO,SAASC,eAAe","file":"static/js/main.fcae0539.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main-logo.b68a6d71.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-photo.a34ad9fa.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/large-logo.e97d4e0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/rectangle-logo.f1dc6b3a.svg\";","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport {\n  atom,\n  useRecoilState,\n} from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\n\n// Used to persist global app state after manual refreshes.\n// See key in local storage for browser\nconst { persistAtom } = recoilPersist();\n\nexport const userState = atom({\n  key: \"userState\",\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const runsState = atom({\n  key: \"runsState\",\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const runnerRunsState = atom({\n  key: \"runnerRunsState\",\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const plannerRunsState = atom({\n  key: \"plannerRunsState\",\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport default function useAppData() {\n  const [runs, setRuns] = useRecoilState(runsState);\n  const [runnerRuns, setRunnerRuns] = useRecoilState(runnerRunsState);\n  const [plannerRuns, setPlannerRuns] = useRecoilState(plannerRunsState);\n  const [user, setUser] = useRecoilState(userState);\n\n  // useEffect(() => {\n  //   Promise.all([axios.get(\"/api/runs\")])\n  //     .then((response) => {\n  //       const { runs } = response[0].data;\n  //       setRuns(runs);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  /// /    });\n  // }, []);\n\n  \n\n  useEffect(() => {\n    if (user) {\n      Promise.all([\n        axios.get(`/api/runs/runner/${user.id}`),\n        axios.get(`/api/runs/planner/${user.id}`),\n      ])\n        .then((response) => {\n          const { runnerRuns } = response[0].data;\n          const { plannerRuns } = response[1].data;\n          setRunnerRuns(runnerRuns);\n          setPlannerRuns(plannerRuns);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [user]);\n\n  function login(email, password) {\n    return axios\n      .post(\"/api/login\", { email, password })\n      .then((response) => {\n        const { user } = response.data;\n        setUser(user);\n        return true;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function logout() {\n    return axios\n      .post(\"/api/logout\")\n      .then(() => {\n        setUser(null);\n        setRunnerRuns(null);\n        setPlannerRuns(null);\n        return null;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function canJoinRun(run_id) {\n    if (!runnerRuns) return true;\n    const runExists = runnerRuns[run_id];\n    if (runExists) return false;\n    return true;\n  }\n\n  function joinRun(runner_id, run_id) {\n    return axios\n      .post(\"/api/register\", { runner_id, run_id })\n      .then((response) => {\n        const { user_run } = response.data;\n\n        if (user_run) return true;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  async function createRun({\n    planner_id,\n    name,\n    description,\n    address,\n    distance,\n    time,\n    date,\n    lat,\n    lng,\n    address_to,\n    lat_to,\n    lng_to,\n    file\n    }) {\n    try {\n      const createRunResponse = await axios({\n        method: \"post\",\n        url: \"/api/runs\",\n        data: { planner_id, name, description, location: address, distance, time, date, lat, lng, location_to: address_to, latitude_to: lat_to, longitude_to: lng_to },\n      });\n      const { run } = createRunResponse.data;\n      const addImageResponse = await axios({\n        method: \"post\",\n        url: `/api/image/${run.id}`,\n        data: file,\n        headers: {\n          \"Content-Type\": \"image/jpeg\",\n        },\n      });\n      if (addImageResponse.status !== 200) return false;\n      return true;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function registerUser({\n    name,\n    email,\n    password,\n    phone,\n    age,\n    gender,\n    runner,\n    planner\n    }) {\n    try {\n      const registerUserResponse = await axios({\n        method: \"post\",\n        url: \"/api/users\",\n        data: { \n          name, \n          email, \n          password, \n          phone, \n          age, \n          gender, \n          runner, \n          planner },\n      });\n      const { user } = registerUserResponse.data;\n      if (registerUserResponse.status !== 200) return false;\n\n      setUser(user);\n      return true;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return {\n    login,\n    logout,\n    joinRun,\n    canJoinRun,\n    createRun,\n    registerUser\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { userState } from \"../../hooks/useAppData\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function JoinButton(props) {\n  const { runType, joinStatus, join } = props;\n  const [text, setText] = useState(\"Join\");\n  const [buttonStatus, setButtonStatus] = useState(false);\n  const user = useRecoilValue(userState);\n  const navigate = useNavigate();\n\n  // Disable button if user has already joined the run\n  useEffect(() => {\n    if (!joinStatus) {\n      setText(\"Already joined\");\n      setButtonStatus(true);\n    }\n  }, []);\n\n  const checkLoginStatus = () => {\n    if (user) join();\n    else navigate(\"/signin\");\n  };\n\n  return (\n    <>\n      {runType === \"available\" && (\n        <button\n          type=\"button\"\n          class=\"join-button\"\n          onClick={checkLoginStatus}\n          disabled={buttonStatus}\n        >\n          {text}\n        </button>\n      )}\n    </>\n  );\n}\n","import { atom } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist();\n\nexport const userCoordinatesAtom = atom({\n  key: \"userCoordinatesAtom\",\n  default: { lat: 43.6532, lng: -79.3832 },\n  effects_UNSTABLE: [persistAtom],\n});\n\n\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { useRecoilState } from \"recoil\";\nimport { userCoordinatesAtom } from \"../../hooks/userCoords\";\n\nconst RouteMap = ({ zoom, from, to }) => {\n  useRecoilState(userCoordinatesAtom);\n  const myKey = process.env.REACT_APP_MAP_API_KEY;\n\n  const handleApiLoaded = (mapp, maps) => {\n    let map = mapp;\n\n    function initialize() {\n      map = new maps.Map(document.getElementById(\"run-path\"), {\n        mapId: \"4493db09864aa939\",\n        center: new maps.LatLng(43.6532, -79.3832),\n        zoom: 13,\n        mapTypeId: maps.MapTypeId.ROADMAP,\n        disableDefaultUI: true,\n      });\n\n      let directionsDisplay = new maps.DirectionsRenderer();\n      let directionsService = new maps.DirectionsService();\n      calculateAndDisplayRoute(\n        new maps.LatLng(from.lat, from.lng),\n        new maps.LatLng(to.lat, to.lng),\n        directionsService,\n        directionsDisplay\n      );\n      directionsDisplay.setMap(map);\n      directionsDisplay.setOptions({\n        polylineOptions: {\n          strokeColor: \"#80B918CC\",\n          strokeWeight: \"8\",\n        },\n      });\n      directionsDisplay.setPanel(document.getElementById(\"run-path\"));\n    }\n    initialize();\n    function calculateAndDisplayRoute(\n      start,\n      end,\n      directionsService,\n      directionsDisplay\n    ) {\n      directionsService.route(\n        {\n          origin: start,\n          destination: end,\n          travelMode: maps.TravelMode.WALKING,\n        },\n        function (response, status) {\n          if (status === maps.DirectionsStatus.OK) {\n            directionsDisplay.setDirections(response);\n          } else {\n            window.alert(\"Directions request failed due to \" + status);\n          }\n        }\n      );\n    }\n  };\n\n  return (\n    <>\n      <div\n        id=\"run-path\"\n        style={{\n          height: \"400px\",\n          width: \"400px\",\n        }}\n      >\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: myKey,\n          }}\n          defaultCenter={{ lat: 43.6532, lng: -79.3832 }}\n          defaultZoom={zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default RouteMap;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport RouteMap from \"./RouteMap\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"../../styles/ShowRunInfo.css\";\n\nexport default function ShowRunInfo({ run, show, handleClose }) {\n  const zoom = 10;\n  const from = { lat: run.latitude, lng: run.longitude };\n  const to = { lat: run.latitude_to, lng: run.longitude_to };\n\n  return (\n    <>\n      <Modal\n        className=\"run-modal\"\n        show={show}\n        onHide={handleClose}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header className=\"route-modal-header\" closeButton>\n          <Modal.Title\n            id=\"contained-modal-title-vcenter\"\n            className=\"modal-title\"\n          >\n            {run.name}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"route-modal-message\">\n          <p>{run.description}</p>\n          <div className=\"run-info\">\n            <RouteMap zoom={zoom} from={from} to={to} />\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item as=\"h4\">Details & Route</ListGroup.Item>\n              <ListGroup.Item>\n                On {run.date} at {run.event_time}\n              </ListGroup.Item>\n              <ListGroup.Item>Start: {run.location}</ListGroup.Item>\n              <ListGroup.Item>Finish: {run.location_to}</ListGroup.Item>\n              <ListGroup.Item>Distance: {run.distance}km</ListGroup.Item>\n            </ListGroup>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={handleClose}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/Run.css\";\nimport JoinButton from \"./JoinButton\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport ShowRunInfo from \"../ShowRunInfo\";\n\nexport default function Run(props) {\n  const { run, type, canJoinRun, join } = props;\n  const [joinStatus, setJoinStatus] = useState(canJoinRun(run.id) || false);\n  const [time, setTime] = useState(\"\");\n  const [eventTime, setEventTime] = useState(\"\");\n\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const handleCloseInfoModal = () => {\n    setShowInfoModal(false);\n  };\n  const handleShowInfoModal = () => {\n    setShowInfoModal(true);\n  };\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      <p>Event on: {run.date}</p>\n      <p>Click for more</p>\n    </Tooltip>\n  );\n\n  useEffect(() => {\n    if (run.time !== 0 && type === \"attended\") {\n      setTime(`${run.time} min`);\n    }\n    if (run.future_run) {\n      setEventTime(`${run.date} at ${run.event_time}`);\n    }\n    if (!run.future_run) {\n      setEventTime(`Was on ${run.date} at ${run.event_time}`);\n    }\n  }, []);\n\n  return (\n    <>\n      <section className=\"run\">\n        <img\n          alt=\"Shows running space\"\n          className=\"run-image\"\n          src={`/api/runs/image/${run.id}`}\n        ></img>\n\n        <div className=\"run-body\">\n          <div className=\"run-heading\">\n            {type === \"available\" && (\n              <span id={`run-${run.id}`} className=\"run-id\">\n                {run.id}\n              </span>\n            )}\n            <h3>{run.name}</h3>\n\n            <OverlayTrigger\n              placement=\"left\"\n              delay={{ show: 250, hide: 50 }}\n              overlay={renderTooltip}\n            >\n              <button\n                type=\"button\"\n                className=\"detail-button\"\n                onClick={handleShowInfoModal}\n              >\n                Details\n              </button>\n            </OverlayTrigger>\n          </div>\n          <p>{run.description}</p>\n          <div className=\"run-desc\">\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item><strong>When:</strong> {eventTime}</ListGroup.Item>\n              <ListGroup.Item><strong>Distance:</strong> {run.distance} km</ListGroup.Item>\n              {time && <ListGroup.Item><strong>Recorded Time:</strong> {time}</ListGroup.Item>}\n            </ListGroup>\n            <JoinButton runType={type} joinStatus={joinStatus} join={join} />\n          </div>\n        </div>\n      </section>\n      <ShowRunInfo\n        run={run}\n        show={showInfoModal}\n        handleClose={handleCloseInfoModal}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function EmptyRuns(props) {\n  const navigate = useNavigate();\n  const [type, setType] = useState(\"\");\n\n  const handleClick = () => {\n    navigate(type.link);\n  };\n\n  useEffect(() => {\n    if (props.type === \"attended\")\n      setType({\n        link: \"/runs\",\n        action: \"Join\",\n        headingText:\n          \"You have not participated in any runs yet. See all available runs in your area.\",\n      });\n    if (props.type === \"planned\")\n      setType({\n        link: \"/create\",\n        action: \"Plan\",\n        headingText:\n          \"You have not planned any runs yet. Plan a new running event.\",\n      });\n  }, [props.type]);\n\n  return (\n    <>\n      <Container className=\"empty-runs-container\">\n        <h3>{type.headingText}</h3>\n        <Button\n          className=\"btn\"\n          variant=\"custom\"\n          onClick={handleClick}\n        >\n          {type.action}\n        </Button>\n      </Container>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function ProfileActions(props) {\n  const navigate = useNavigate();\n  const [action, setAction] = useState(\"\");\n\n  const handleClick = (link) => {\n    navigate(link);\n  };\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      {action}\n    </Tooltip>\n  );\n\n  return (\n    <>\n      <Container className=\"profile-actions\">\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 50 }}\n          overlay={renderTooltip}\n        >\n          <span\n            className=\"material-symbols-rounded\"\n            onClick={() => handleClick(\"/create\")}\n            onMouseEnter={()=>setAction(\"Plan A Run\")}\n          >\n            group_work\n          </span>\n        </OverlayTrigger>\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 50 }}\n          overlay={renderTooltip}\n        >\n          <span\n            className=\"material-symbols-rounded\"\n            onClick={() => handleClick(\"/runs\")}\n            onMouseEnter={()=>setAction(\"Join A Run\")}\n          >\n            run_circle\n          </span>\n        </OverlayTrigger>\n      </Container>\n    </>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport Run from \"../Run\";\nimport EmptyRuns from \"./EmptyRuns\";\nimport ProfileActions from \"./ProfileActions\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Table from \"react-bootstrap/Table\";\nimport \"../../styles/Profile.css\";\nimport {\n  userState,\n  runnerRunsState,\n  plannerRunsState,\n} from \"../../hooks/useAppData\";\nimport { useRecoilValue } from \"recoil\";\nimport useAppData from \"../../hooks/useAppData\";\nimport profilePhoto from '../../images/profile-photo.jpeg';\n\nexport default function Profile() {\n  const user = useRecoilValue(userState);\n  const runnerRuns = useRecoilValue(runnerRunsState);\n  const plannerRuns = useRecoilValue(plannerRunsState);\n  const { joinRun, canJoinRun } = useAppData();\n  const [runData, setRunData] = useState({ distance: 0, minutes: 0, count: 0 });\n\n\n  const showRunnersRuns = (runs, type) => {\n    const runsArray = Object.values(runs);\n    if (runsArray.length === 0) return <EmptyRuns type={type} />;\n    return runsArray.map((run) => (\n      <Run\n        key={run.id}\n        run={run}\n        type={type}\n        join={joinRun}\n        canJoinRun={canJoinRun}\n      />\n    ));\n  };\n\n  const profilePicture = (\n    <img\n      className=\"profile-pic\"\n      src={profilePhoto}\n      alt=\"icon-profile\"\n    ></img>\n  );\n\n  useEffect(() => {\n    let distance = 0,\n      minutes = 0,\n      count = 0;\n    for (const key in runnerRuns) {\n      if (runnerRuns[key].future_run === false) {\n        distance += parseInt(runnerRuns[key].distance);\n        minutes += parseInt(runnerRuns[key].time);\n        count += 1;\n      }\n    }\n    setRunData({ distance, minutes, count });\n  }, [runnerRuns]);\n\n  return (\n    <main className=\"profile-section\">\n      <section className=\"profile-header\">\n        <div className=\"profile-info\">\n          <div className=\"profile-welcome\">\n            <div>\n              <h1>Welcome!</h1>\n              {user && <p>{user.name}</p>}\n            </div>\n            <ProfileActions />\n          </div>\n          <h4>YOU HAVE:</h4>\n          <Table size=\"sm\">\n            <thead>\n              <tr>\n                <th>RUN FOR</th>\n                <th>COVERED</th>\n                <th>ATTENDED</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  {runData.minutes}\n                  <span className=\"unit\">min</span>\n                </td>\n                <td>\n                  {runData.distance}\n                  <span className=\"unit\">km</span>\n                </td>\n                <td>\n                  {runData.count}\n                  <span className=\"unit\">runs</span>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n        {profilePicture}\n      </section>\n\n      <section className=\"profile-stats\">\n        <Tabs\n          defaultActiveKey=\"attended\"\n          id=\"profile-tab\"\n          className=\"mb-3\"\n          fill\n        >\n          <Tab eventKey=\"attended\" title=\"Attended\">\n            <section className=\"runs-tab\">\n              {runnerRuns && showRunnersRuns(runnerRuns, \"attended\")}\n            </section>\n          </Tab>\n          <Tab eventKey=\"planned\" title=\"Planned\">\n            <section className=\"runs-tab\">\n              {plannerRuns && showRunnersRuns(plannerRuns, \"planned\")}\n            </section>\n          </Tab>\n        </Tabs>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport \"../../styles/Marker.css\";\n\nconst Markers = ({ id, $hover, description, distance, date }) => {\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      <p>\n        {description}\n        {distance && ` (${distance}k)`}\n      </p>\n      <p>{date && `Date: ${date}`}</p>\n    </Tooltip>\n  );\n\n  return (\n    <OverlayTrigger\n      placement=\"left\"\n      delay={{ show: 100, hide: 100 }}\n      overlay={renderTooltip}\n    >\n      <a href={`#run-${id}`}>\n        <div\n          className={$hover ? \"circle hover\" : \"circle\"}\n        >\n          <span className=\"circleText\">\n            {id}\n          </span>\n        </div>\n      </a>\n    </OverlayTrigger>\n  );\n};\n\nexport default Markers;\n","import React, { useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Markers from \"./Markers\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { runsState } from \"../../hooks/useAppData\";\nimport \"../../styles/Map.css\";\nimport { userCoordinatesAtom } from \"../../hooks/userCoords\";\n\nconst DefaultMap = ({ center, zoom }) => {\n  // const runs = useRecoilValue(runsState);\n  const [currentLocation, setCurrentLocation] =\n    useRecoilState(userCoordinatesAtom);\n\n  // const showMarkers = (runs) => {\n  //   const runsArray = Object.values(runs);\n  //   return runsArray.map((run) => (\n  //     <Markers\n  //       key={run.id}\n  //       id={run.id}\n  //       name={run.name}\n  //       description={run.name}\n  //       distance={run.distance}\n  //       date={run.date}\n  //       lat={run.latitude}\n  //       lng={run.longitude}\n  //     />\n  //   ));\n  // };\n\n  const myKey = process.env.REACT_APP_MAP_API_KEY;\n  useEffect(() => {\n    function getLocation() {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCurrentLocation({ lat: latitude, lng: longitude });\n      });\n    }\n    getLocation();\n  }, []);\n  return (\n    <>\n      <div className=\"map\" style={{ height: \"80vh\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: myKey,\n          }}\n          defaultCenter={{ lat: 43.6532, lng: -79.3832 }}\n          center={currentLocation}\n          defaultZoom={zoom}\n        >\n          <Markers\n            lat={center.lat}\n            lng={center.lng}\n            id=\"Me\"\n            description=\"You are here!\"\n          />\n          {/* {showMarkers(runs)} */}\n        </GoogleMapReact>\n      </div>\n    </>\n  );\n};\n\nexport default DefaultMap;\n","import React from \"react\";\nimport \"../../styles/Map.css\";\nimport { useRecoilValue } from \"recoil\";\nimport { userCoordinatesAtom } from \"../../hooks/userCoords\";\nimport { Link } from \"react-router-dom\";\nimport DefaultMap from \"./DefaultMap\";\n\n\nexport default function Map() {\n  const center = useRecoilValue(userCoordinatesAtom);\n  const zoom = 10;\n\n  return (\n    <>\n      <div className=\"map-container\" style={{ height: \"85vh\", width: \"100%\" }}>\n        <section className=\"map-info\">\n          <h2>Search</h2>\n          <p>\n            Find a run near you. Hover on the orange dots to see details about\n            each run. Click to go to the run. You can also see a full list\n            below.\n          </p>\n          <a href=\"#available-runs\">\n            <span className=\"material-symbols-rounded\">\n              expand_more\n            </span>\n          </a>\n          <p>Can't find a run near you? Plan one <Link to=\"/create\">here</Link>.</p>\n        </section>\n        <DefaultMap center={center} zoom={zoom} />\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useNavigate } from \"react-router-dom\";\nimport logo from \"../images/main-logo.png\";\n\nexport default function JoiningStatus(props) {\n  const { joinButtonPressed, setJoinButtonPressed } = props;\n  const { text } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (joinButtonPressed === true) {\n      let timer = setTimeout(() => {\n        setJoinButtonPressed(false);\n        navigate(\"/profile\");\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [joinButtonPressed]);\n\n  const logoImage = (\n    <img\n      className=\"logo-status\"\n      src={logo}\n      width=\"50em\"\n      height=\"auto\"\n      style={{margin:\"0 40px\"}}\n      alt=\"logo on status spinner\"\n    ></img>\n  );\n\n  return (\n    <>\n      <Modal\n        className=\"joining-status-modal\"\n        size=\"lg\"\n        show={joinButtonPressed}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header className=\"joining-status-header\">\n          {logoImage}\n          <Modal.Title>THANK YOU FOR {text} A RUN!</Modal.Title>\n          {logoImage}\n        </Modal.Header>\n        <Modal.Body className=\"joining-status-message\">\n          <p>\n            You will now be directed to your profile page. You will receive a\n            text message confirming the address of the run and other relevant\n            information!\n          </p>\n          <p>Reach out to us for more information at hello@werun.com.</p>\n          <Spinner className=\"status-spinner\" animation=\"border\" />\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Run from \"../Run\";\nimport Map from \"../Map\";\nimport JoiningStatus from \"../JoiningStatus\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { userState, runsState } from \"../../hooks/useAppData\";\nimport useAppData from \"../../hooks/useAppData\";\nimport \"../../styles/FindRun.css\";\n\nexport default function FindRun() {\n  // const runs = useRecoilValue(runsState);\n  // const user = useRecoilValue(userState);\n  // const { joinRun, canJoinRun } = useAppData();\n  // const navigate = useNavigate();\n  // const [joinButtonPressed, setJoinButtonPressed] = useState(false);\n\n  // const join = (user_id, run_id) => {\n  //   // Check if joining is possible\n  //   if (!canJoinRun(run_id)) {\n  //     console.log(\"You cannot join this run.\");\n  //     navigate(\"/\");\n  //     return;\n  //   }\n  //   // Join if possible\n  //   joinRun(user_id, run_id).then((response) => {\n  //     if (response) {\n  //       setJoinButtonPressed(true);\n  //     }\n  //   });\n  // };\n\n  // const showAvailableRuns = (runs, type) => {\n  //   const runsArray = Object.values(runs);\n  //   return runsArray.map((run) => {\n  //     return (\n  //       run.future_run && (\n  //         <Run\n  //           key={run.id}\n  //           run={run}\n  //           type={type}\n  //           join={() => join(user.id, run.id)}\n  //           canJoinRun={canJoinRun}\n  //         />\n  //       )\n  //     );\n  //   });\n  // };\n\n  return (\n    <>\n      <section id=\"find-run-page\">\n        <Map />\n        <section id=\"available-runs\">\n          <h2>Available right now</h2>\n          <p>\n            Our runs are about being inclusive, community and wellbeing. Our\n            mission is for people to feel part of a real local community brought\n            together by physical activity, as well as our national weRun family\n            across Canada. If you can't find an event near you, you can register\n            with weRun and plan your own.\n          </p>\n        </section>\n        {/* {showAvailableRuns(runs, \"available\")} */}\n      </section>\n      {/* {user && (\n        <JoiningStatus\n          joinButtonPressed={joinButtonPressed}\n          setJoinButtonPressed={setJoinButtonPressed}\n          text=\"JOINING\"\n        />\n      )} */}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/RegisterUser.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useNavigate } from \"react-router-dom\";\nimport useAppData from \"../hooks/useAppData\";\n\nexport default function RegisterUser() {\n  \n  const { registerUser } = useAppData();\n\n  const [userData, setUserData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    phone: \"\",\n    age: \"\",\n    runner: false,\n    planner: false,\n  });\n  const handleChange = (e) => {\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n  };\n\n  const handleCheckboxChange = (e) => {\n    const prev = userData[e.target.name];\n    setUserData({ ...userData, [e.target.name]: !prev });\n  };\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    registerUser(userData);\n    navigate(\"/profile\");\n  };\n\n  const genderSelector = () => {\n    return (\n      <>\n        <Form.Text id=\"profileHelpBlock\" muted>\n          Gender:\n        </Form.Text>\n        <Form.Group\n          name=\"gender\"\n          className=\"mb-3\"\n          controlId=\"formBasicCheckbox\"\n          aria-describedby=\"profileHelpBlock\"\n        >\n          {[\"he/Him\", \"she/Her\", \"they/Them\", \"I prefer not to say\"].map(\n            (label, index) => {\n              return (\n                <Form.Check\n                  required\n                  inline\n                  key={label}\n                  label={label}\n                  name=\"gender\"\n                  type=\"radio\"\n                  id={`inline-radio-${index}`}\n                  value={label}\n                  checked={userData.gender === label}\n                  onChange={handleChange}\n                />\n              );\n            }\n          )}\n        </Form.Group>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"forms\">\n      <Form\n        className=\"form-container\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"form-container-text\">\n          <Form.Text as=\"h3\">HI THERE, RUNNER!</Form.Text>\n          <Form.Text as=\"p\">\n            Create an account with us to use weRun and join runs with people\n            from all over Canada.\n          </Form.Text>\n        </div>\n        <FloatingLabel controlId=\"floatingInput\" label=\"Name\" className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Firstname / Lastname\"\n            name=\"name\"\n            value={userData.name}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Enter your name.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n        <FloatingLabel controlId=\"floatingInput\" label=\"Email\" className=\"mb-3\">\n          <Form.Control\n            required\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"name@example.com\"\n            value={userData.email}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Enter a valid email address.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n        <FloatingLabel\n          controlId=\"floatingPassword\"\n          label=\"Password\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={userData.password}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Cool password!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Enter a valid password.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n        <Row>\n          <Col>\n            <FloatingLabel controlId=\"phone\" label=\"Phone\" className=\"mb-3\">\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Phone\"\n                name=\"phone\"\n                value={userData.phone}\n                onChange={handleChange}\n              />\n              <Form.Control.Feedback>Got it!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid phone number.\n              </Form.Control.Feedback>\n            </FloatingLabel>\n          </Col>\n          <Col>\n            <FloatingLabel\n              controlId=\"floatingInput\"\n              label=\"Age\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Age\"\n                name=\"age\"\n                value={userData.age}\n                onChange={handleChange}\n              />\n              <Form.Control.Feedback>\n                You're getting old..\n              </Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid age.\n              </Form.Control.Feedback>\n            </FloatingLabel>{\" \"}\n          </Col>\n        </Row>\n\n        {genderSelector()}\n        <Form.Text id=\"profileHelpBlock\" muted>\n          Pick atleast 1:\n        </Form.Text>\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicCheckbox\"\n          aria-describedby=\"profileHelpBlock\"\n        >\n          <Form.Check\n            inline\n            label=\"Runner\"\n            type=\"checkbox\"\n            id={`inline-checkbox-1`}\n            name=\"runner\"\n            checked={userData.runner}\n            onChange={handleCheckboxChange}\n          />\n          <Form.Check\n            inline\n            label=\"Planner\"\n            type=\"checkbox\"\n            id={`inline-checkbox-2`}\n            name=\"planner\"\n            checked={userData.planner}\n            onChange={handleCheckboxChange}\n          />\n        </Form.Group>\n       \n        <Button variant=\"custom\" type=\"submit\" className=\"btn\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/Homepage.css\";\nimport logo from \"../images/large-logo.svg\";\nimport squareLogo from \"../images/rectangle-logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Homepage() {\n  return (\n    <div>\n      <div className=\"home\">\n        <div>\n          <div className=\"home-intro\">\n            <h2>Welcome to weRun!</h2>\n            <p>\n              We organise free, weekly, timed, community events all over Canada.\n              Get connected to runs near you today. Bring a buddy!\n            </p>\n          </div>\n          <div className=\"home-actions\">\n            <Link className=\"home-join\" to=\"/runs\">\n              <div className=\"underline\">Find</div>\n              <p>Search for local running events</p>\n            </Link>\n            <Link className=\"home-plan\" to=\"/create\">\n              <div className=\"underline\">Plan</div>\n              <p>Create a new running event</p>\n            </Link>\n          </div>\n        </div>\n        <div className=\"logo-container\">\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <img src={squareLogo} className=\"square-logo\" alt=\"logo\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport useAppData from \"../hooks/useAppData\";\nimport { userState } from \"../hooks/useAppData\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/RegisterUser.css\";\n\nexport default function SignIn() {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { login } = useAppData();\n  const setUser = useSetRecoilState(userState);\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(email, password)\n    .then((status)=>{\n      status && navigate(`/profile`);\n    })\n  };\n\n  return (\n    <div className=\"forms\">\n      <Form className=\"form-container sign-in text-center\" onSubmit={handleSubmit}>\n        <div className=\"form-container-text\">\n          <Form.Text as=\"h3\">WELCOME BACK, RUNNER!</Form.Text>\n          <Form.Text as=\"p\">Sign in to see all your running events.</Form.Text>\n        </div>\n        <FloatingLabel controlId=\"floatingInput\" label=\"Email\" className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"name@example.com\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </FloatingLabel>\n        <FloatingLabel\n          controlId=\"floatingPassword\"\n          label=\"Password\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </FloatingLabel>\n        <Button variant=\"custom\" type=\"submit\" className=\"btn\">\n          Sign In\n        </Button>\n        <Form.Text as=\"div\" className=\"text-center mb-2 mt-4\">Don't have an account? Create one <Link to=\"/register\">here</Link>.</Form.Text>\n      </Form>\n    </div>\n  );\n}\n","import { usePlacesWidget } from \"react-google-autocomplete\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default function AutoComplete(props) {\n  const myKey = process.env.REACT_APP_MAP_API_KEY;\n  const { setAddress } = props;\n  const { ref: locationRef } = usePlacesWidget({\n    apiKey: myKey,\n    onPlaceSelected: (place) => {\n      setAddress(\n        place.formatted_address,\n        place.geometry.location.lat(),\n        place.geometry.location.lng()\n      );\n    },\n    options: {\n      types: [\"park\"],\n      componentRestrictions: { country: \"ca\" },\n      fields: [\"name\", \"formatted_address\", \"geometry\"],\n    },\n    inputAutocompleteValue: \"text\",\n  });\n  return (\n    <>\n      <Form.Control\n        required\n        type=\"text\"\n        ref={locationRef}\n        placeholder=\"something\"\n        autoComplete=\"text\"\n      />\n    </>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/RegisterUser.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport JoiningStatus from \"../JoiningStatus\";\nimport DatePicker from \"react-datepicker\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { userState } from \"../../hooks/useAppData\";\nimport useAppData from \"../../hooks/useAppData\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AutoComplete from \"./AutoComplete\";\n\nexport default function RegisterRun() {\n\n  //Get user and update form state\n  const user = useRecoilValue(userState);\n  const [joinButtonPressed, setJoinButtonPressed] = useState(false);\n\n  const [runData, setRunData] = useState({\n    planner_id: \"\",\n    name: \"\",\n    description: \"\",\n    distance: \"\",\n    time: `${new Date().getHours()}:${new Date().getMinutes()}`,\n    date: new Date(),\n    file: \"\",\n    lat: \"\",\n    lng: \"\",\n    address: \"\",\n    lat_to: \"\",\n    lng_to: \"\",\n    address_to: \"\",\n  });\n\n\n  const navigate = useNavigate();\n  const { createRun } = useAppData();\n\n  const handleChange = (e) => {\n    setRunData({ ...runData, [e.target.name]: e.target.value });\n  };\n\n //Submit to database\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //form validity\n    // const form = e.currentTarget;\n    // if (form.checkValidity() === false) {\n    //   e.preventDefault();\n    //   e.stopPropagation();\n    // }\n\n    //send data\n    const response = createRun({ ...runData });\n    response && setJoinButtonPressed(true);\n    \n    // setValidated(true)\n    // if (validated)\n\n  };\n\n  const datePick = () => {\n    return (\n      <Form.Group controlId=\"date\" className=\"mb-3\" style={{ width: \"100%\" }}>\n        <Form.Label>Date</Form.Label>\n        <DatePicker\n          className=\"date-picker\"\n          required\n          name=\"date\"\n          selected={runData.date}\n          onChange={(date) => setRunData({ ...runData, date: date })}\n          key={runData.date}\n        />\n      </Form.Group>\n    );\n  };\n\n  const distanceSelector = () => {\n    return (\n      <div className=\"mb-3\">\n        {[2, 5, 10].map((label, index) => {\n          return (\n            <Form.Check\n              required\n              key={label}\n              inline\n              type=\"radio\"\n              id={`inline-radio-1-${index}`}\n              label={`${label}k`}\n              value={label}\n              name=\"distance\"\n              onChange={handleChange}\n            />\n          );\n        })}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/signin\");\n    }\n    if (user) {\n      setRunData({ ...runData, planner_id: user.id });\n    }\n  }, []);\n\n  return (\n    <div className=\"forms\">\n      <Form\n        className=\"form-container\"\n        encType=\"multipart/form-data\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"form-container-text\">\n          <Form.Text as=\"h3\">Create a Run</Form.Text>\n          <Form.Text as=\"p\">\n            Don't see a run event near you? Just tell us where and when and the\n            rest is on us.\n          </Form.Text>\n        </div>\n        <FloatingLabel controlId=\"name\" label=\"Name\" className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={runData.name}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Enter a name for the run.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n        <FloatingLabel\n          controlId=\"description\"\n          label=\"Description\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            as=\"textarea\"\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={runData.description}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Write a short description including directions, necessary\n            information, etc.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n\n        <Row>\n          <Col>\n            <FloatingLabel\n              controlId=\"location\"\n              label=\"From...\"\n              className=\"mb-3\"\n            >\n              <AutoComplete\n                setAddress={(address, lat, lng) =>\n                  setRunData((prev) => {\n                    return { ...prev, address: address, lat: lat, lng: lng };\n                  })\n                }\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid address.\n              </Form.Control.Feedback>\n            </FloatingLabel>\n          </Col>\n          <Col>\n            <FloatingLabel controlId=\"location\" label=\"To...\" className=\"mb-3\">\n              <AutoComplete\n                setAddress={(address, lat, lng) =>\n                  setRunData((prev) => {\n                    return {\n                      ...prev,\n                      address_to: address,\n                      lat_to: lat,\n                      lng_to: lng,\n                    };\n                  })\n                }\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid address.\n              </Form.Control.Feedback>\n            </FloatingLabel>\n          </Col>\n        </Row>\n        <Form.Group controlId=\"distance\" className=\"mb-3\">\n          <Form.Label>Distance</Form.Label>\n          {distanceSelector()}\n        </Form.Group>\n\n        <Row>\n          <Col>{datePick()}</Col>\n          <Col>\n            <Form.Group controlId=\"time\" className=\"mb-3\">\n              <Form.Label>Time</Form.Label>\n              <Form.Control\n                required\n                key={runData.time}\n                type=\"time\"\n                name=\"time\"\n                placeholder=\"Time\"\n                value={runData.time}\n                onChange={(event) =>\n                  setRunData({ ...runData, time: event.target.value })\n                }\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid time.\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n        </Row>\n        <Form.Group controlId=\"formFileLg\" className=\"mb-3\">\n          <Form.Label>Upload an image</Form.Label>\n          <Form.Control\n            required\n            name=\"file\"\n            type=\"file\"\n            onChange={(e) =>\n              setRunData({ ...runData, file: e.target.files[0] })\n            }\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Upload an image for this run.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button variant=\"custom\" type=\"submit\" className=\"btn\">\n          Create\n        </Button>\n      </Form>\n      <JoiningStatus\n          joinButtonPressed={joinButtonPressed}\n          setJoinButtonPressed={setJoinButtonPressed}\n          text=\"PLANNING\"\n        />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { userState } from \"../hooks/useAppData\";\nimport useAppData from \"../hooks/useAppData\";\nimport \"../styles/Navigation.css\";\nimport logo from \"../images/main-logo.png\";\n\nexport default function Navigation() {\n  const user = useRecoilValue(userState);\n  const navigate = useNavigate();\n  const { logout } = useAppData();\n\n  const signOut = () => {\n    logout().then((status) => {\n      if (status === null) {\n        navigate(\"/\");\n      }\n    });\n  };\n\n  return (\n    <Navbar id=\"navigation\" bg=\"light\" expand=\"lg\">\n      <Container fluid>\n        <Link className=\"navbar-brand\" to=\"/\">\n          <img\n            src={logo}\n            className=\"d-inline-block align-top\"\n            alt=\"logo\"\n          />\n        </Link>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav\n            className=\"me-auto my-2 my-lg-0\"\n            style={{ maxHeight: \"100px\" }}\n            navbarScroll\n          >\n            <Link className=\"nav-link\" to=\"/\">\n              Home\n            </Link>\n            <Link className=\"nav-link\" to=\"/runs\">\n              Join A Run\n            </Link>\n          </Nav>\n          <Nav pullRight>\n            {user === null && (\n              <Link className=\"nav-link\" to=\"/signin\">\n                Sign In\n              </Link>\n            )}\n            {user === null && (\n              <Link className=\"nav-link\" to=\"/register\">\n                Sign Up\n              </Link>\n            )}\n\n            {user !== null && (\n              <Link className=\"nav-link\" to=\"/profile\">\n                Profile\n              </Link>\n            )}\n            {user !== null && (\n              <Link className=\"nav-link\" to=\"#\" onClick={signOut}>\n                Sign Out\n              </Link>\n            )}\n\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import React from \"react\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"./components/Navigation\";\nimport { Outlet } from \"react-router-dom\";\nrequire(\"dotenv\").config();\nconsole.log(process.env.REACT_APP_NEW_SECRET);\nexport default function App() {\n  return (\n    <div>\n      <Navigation />\n      <Outlet />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Profile from \"./components/Profile\";\nimport FindRun from \"./components/FindRun\";\nimport RegisterUser from \"./components/RegisterUser\";\nimport Homepage from \"./components/Homepage.jsx\";\nimport SignIn from \"./components/SignIn\";\nimport RegisterRun from \"./components/RegisterRun\";\nimport App from \"./App\";\n\nimport {\n  createRoutesFromElements,\n  createBrowserRouter,\n  createHashRouter,\n  Route,\n} from \"react-router-dom\";\nimport ShowRunInfo from \"./components/ShowRunInfo\";\n\nexport const router = createHashRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<App />}>\n      <Route index element={<Homepage />} />\n      {/* <Route path=\"/werun/\" element={<Homepage />} /> */}\n      <Route path=\"/profile\" element={<Profile />} />\n      <Route path=\"/runs\" element={<FindRun />} />\n      <Route path=\"/register\" element={<RegisterUser />} />\n      <Route path=\"/create\" element={<RegisterRun />}/>\n      <Route path=\"/signin\" element={<SignIn />} />\n      <Route path=\"/run-info\" element={<ShowRunInfo />} />\n    </Route>\n  )\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { RecoilRoot } from \"recoil\";\nimport { RouterProvider } from \"react-router-dom\";\nimport { router } from \"./AppRouter\";\n\nReactDOM.render(\n  <RecoilRoot>\n    <RouterProvider router={router} />\n  </RecoilRoot>,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}