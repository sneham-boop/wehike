{"version":3,"sources":["images/main-logo.png","images/profile-photo.jpeg","images/large-logo.svg","images/rectangle-logo.svg","hooks/useAppData.js","components/Run/JoinButton.jsx","hooks/userCoords.js","components/ShowRunInfo/RouteMap.jsx","components/ShowRunInfo/index.js","components/Run/index.js","components/Profile/EmptyRuns.jsx","components/Profile/ProfileActions.jsx","components/Profile/index.js","components/Map/Markers.jsx","components/Map/DefaultMap.jsx","components/Map/index.js","components/JoiningStatus.jsx","components/FindRun/index.js","components/RegisterUser.jsx","components/Homepage.jsx","components/SignIn.jsx","components/RegisterRun/AutoComplete.jsx","components/RegisterRun/index.js","components/Navigation.jsx","App.jsx","AppRouter.jsx","index.js"],"names":["module","exports","__webpack_require__","p","persistAtom","recoilPersist","userState","atom","key","default","effects_UNSTABLE","runsState","runnerRunsState","plannerRunsState","useAppData","_useRecoilState","useRecoilState","_useRecoilState2","Object","slicedToArray","_useRecoilState3","_useRecoilState4","runnerRuns","setRunnerRuns","_useRecoilState5","_useRecoilState6","setPlannerRuns","_useRecoilState7","_useRecoilState8","user","setUser","_createRun","asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","planner_id","name","description","address","distance","time","date","lat","lng","address_to","lat_to","lng_to","file","createRunResponse","run","wrap","_context","prev","next","axios","method","url","data","location","location_to","latitude_to","longitude_to","sent","concat","id","headers","Content-Type","status","abrupt","t0","console","log","stop","apply","this","arguments","_registerUser","_callee2","_ref2","email","password","phone","age","gender","runner","planner","registerUserResponse","_user","_context2","process","REACT_APP_NEW_SECRET","useEffect","Promise","all","get","then","response","plannerRuns","catch","error","login","post","logout","joinRun","runner_id","run_id","user_run","canJoinRun","createRun","_x","registerUser","_x2","JoinButton","props","runType","joinStatus","join","_useState","useState","_useState2","text","setText","_useState3","_useState4","buttonStatus","setButtonStatus","useRecoilValue","navigate","useNavigate","react_default","a","createElement","Fragment","type","class","onClick","disabled","userCoordinatesAtom","RouteMap","zoom","from","to","myKey","REACT_APP_MAP_API_KEY","handleApiLoaded","mapp","maps","map","Map","document","getElementById","mapId","center","LatLng","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","directionsDisplay","DirectionsRenderer","directionsService","DirectionsService","start","end","route","origin","destination","travelMode","TravelMode","WALKING","DirectionsStatus","OK","setDirections","window","alert","calculateAndDisplayRoute","setMap","setOptions","polylineOptions","strokeColor","strokeWeight","setPanel","initialize","style","height","width","index_modern","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","ShowRunInfo","show","handleClose","latitude","longitude","Modal","className","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","ShowRunInfo_RouteMap","ListGroup","variant","Item","as","event_time","Footer","Button","Run","setTime","_useState5","_useState6","eventTime","setEventTime","_useState7","_useState8","showInfoModal","setShowInfoModal","future_run","alt","src","OverlayTrigger","placement","delay","hide","overlay","Tooltip","assign","ShowRunInfo_ShowRunInfo","EmptyRuns","setType","link","action","headingText","Container","ProfileActions","setAction","handleClick","renderTooltip","onMouseEnter","Profile","_useAppData","minutes","count","runData","setRunData","showRunnersRuns","runs","runsArray","values","length","Run_Run","profilePicture","profilePhoto","parseInt","Table","Tabs","defaultActiveKey","fill","Tab","eventKey","title","Markers","$hover","href","DefaultMap","currentLocation","setCurrentLocation","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","Map_Markers","react_router_dom_dist","Map_DefaultMap","JoiningStatus","joinButtonPressed","setJoinButtonPressed","timer","setTimeout","clearTimeout","logoImage","logo","margin","backdrop","keyboard","Spinner","animation","FindRun","Map_Map","RegisterUser","userData","setUserData","handleChange","e","objectSpread","defineProperty","target","value","handleCheckboxChange","Form","onSubmit","preventDefault","Text","FloatingLabel","controlId","label","Control","required","placeholder","onChange","Feedback","Row","Col","muted","Group","aria-describedby","index","Check","inline","checked","Homepage","squareLogo","SignIn","setEmail","setPassword","useSetRecoilState","AutoComplete","setAddress","locationRef","usePlacesWidget","apiKey","onPlaceSelected","place","formatted_address","geometry","options","types","componentRestrictions","country","fields","inputAutocompleteValue","ref","autoComplete","RegisterRun","Date","getHours","getMinutes","encType","Label","react_datepicker_min_default","selected","event","files","Navigation","Navbar","bg","expand","fluid","Toggle","aria-controls","Collapse","Nav","maxHeight","navbarScroll","pullRight","App","Navigation_Navigation","dist","require","config","router","createHashRouter","createRoutesFromElements","path","element","Homepage_Homepage","Profile_Profile","FindRun_FindRun","RegisterUser_RegisterUser","ReactDOM","render","es"],"mappings":"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","file":"static/js/main.bb7b611a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main-logo.b68a6d71.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-photo.a34ad9fa.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/large-logo.e97d4e0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/rectangle-logo.f1dc6b3a.svg\";","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport {\n  atom,\n  useRecoilState,\n} from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\n\n// Used to persist global app state after manual refreshes.\n// See key in local storage for browser\nconst { persistAtom } = recoilPersist();\n\nexport const userState = atom({\n  key: \"userState\",\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const runsState = atom({\n  key: \"runsState\",\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const runnerRunsState = atom({\n  key: \"runnerRunsState\",\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const plannerRunsState = atom({\n  key: \"plannerRunsState\",\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport default function useAppData() {\n  const [runs, setRuns] = useRecoilState(runsState);\n  const [runnerRuns, setRunnerRuns] = useRecoilState(runnerRunsState);\n  const [plannerRuns, setPlannerRuns] = useRecoilState(plannerRunsState);\n  const [user, setUser] = useRecoilState(userState);\n\n  // useEffect(() => {\n  //   Promise.all([axios.get(\"/api/runs\")])\n  //     .then((response) => {\n  //       const { runs } = response[0].data;\n  //       setRuns(runs);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  ///     });\n  // }, []);\n\n  console.log(process.env.REACT_APP_NEW_SECRET);\n\n  useEffect(() => {\n    if (user) {\n      Promise.all([\n        axios.get(`/api/runs/runner/${user.id}`),\n        axios.get(`/api/runs/planner/${user.id}`),\n      ])\n        .then((response) => {\n          const { runnerRuns } = response[0].data;\n          const { plannerRuns } = response[1].data;\n          setRunnerRuns(runnerRuns);\n          setPlannerRuns(plannerRuns);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [user]);\n\n  function login(email, password) {\n    return axios\n      .post(\"/api/login\", { email, password })\n      .then((response) => {\n        const { user } = response.data;\n        setUser(user);\n        return true;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function logout() {\n    return axios\n      .post(\"/api/logout\")\n      .then(() => {\n        setUser(null);\n        setRunnerRuns(null);\n        setPlannerRuns(null);\n        return null;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function canJoinRun(run_id) {\n    if (!runnerRuns) return true;\n    const runExists = runnerRuns[run_id];\n    if (runExists) return false;\n    return true;\n  }\n\n  function joinRun(runner_id, run_id) {\n    return axios\n      .post(\"/api/register\", { runner_id, run_id })\n      .then((response) => {\n        const { user_run } = response.data;\n\n        if (user_run) return true;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  async function createRun({\n    planner_id,\n    name,\n    description,\n    address,\n    distance,\n    time,\n    date,\n    lat,\n    lng,\n    address_to,\n    lat_to,\n    lng_to,\n    file\n    }) {\n    try {\n      const createRunResponse = await axios({\n        method: \"post\",\n        url: \"/api/runs\",\n        data: { planner_id, name, description, location: address, distance, time, date, lat, lng, location_to: address_to, latitude_to: lat_to, longitude_to: lng_to },\n      });\n      const { run } = createRunResponse.data;\n      const addImageResponse = await axios({\n        method: \"post\",\n        url: `/api/image/${run.id}`,\n        data: file,\n        headers: {\n          \"Content-Type\": \"image/jpeg\",\n        },\n      });\n      if (addImageResponse.status !== 200) return false;\n      return true;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function registerUser({\n    name,\n    email,\n    password,\n    phone,\n    age,\n    gender,\n    runner,\n    planner\n    }) {\n    try {\n      const registerUserResponse = await axios({\n        method: \"post\",\n        url: \"/api/users\",\n        data: { \n          name, \n          email, \n          password, \n          phone, \n          age, \n          gender, \n          runner, \n          planner },\n      });\n      const { user } = registerUserResponse.data;\n      if (registerUserResponse.status !== 200) return false;\n\n      setUser(user);\n      return true;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return {\n    login,\n    logout,\n    joinRun,\n    canJoinRun,\n    createRun,\n    registerUser\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { userState } from \"../../hooks/useAppData\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function JoinButton(props) {\n  const { runType, joinStatus, join } = props;\n  const [text, setText] = useState(\"Join\");\n  const [buttonStatus, setButtonStatus] = useState(false);\n  const user = useRecoilValue(userState);\n  const navigate = useNavigate();\n\n  // Disable button if user has already joined the run\n  useEffect(() => {\n    if (!joinStatus) {\n      setText(\"Already joined\");\n      setButtonStatus(true);\n    }\n  }, []);\n\n  const checkLoginStatus = () => {\n    if (user) join();\n    else navigate(\"/signin\");\n  };\n\n  return (\n    <>\n      {runType === \"available\" && (\n        <button\n          type=\"button\"\n          class=\"join-button\"\n          onClick={checkLoginStatus}\n          disabled={buttonStatus}\n        >\n          {text}\n        </button>\n      )}\n    </>\n  );\n}\n","import { atom } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist();\n\nexport const userCoordinatesAtom = atom({\n  key: \"userCoordinatesAtom\",\n  default: { lat: 43.6532, lng: -79.3832 },\n  effects_UNSTABLE: [persistAtom],\n});\n\n\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { useRecoilState } from \"recoil\";\nimport { userCoordinatesAtom } from \"../../hooks/userCoords\";\n\nconst RouteMap = ({ zoom, from, to }) => {\n  useRecoilState(userCoordinatesAtom);\n  const myKey = process.env.REACT_APP_MAP_API_KEY;\n\n  const handleApiLoaded = (mapp, maps) => {\n    let map = mapp;\n\n    function initialize() {\n      map = new maps.Map(document.getElementById(\"run-path\"), {\n        mapId: \"4493db09864aa939\",\n        center: new maps.LatLng(43.6532, -79.3832),\n        zoom: 13,\n        mapTypeId: maps.MapTypeId.ROADMAP,\n        disableDefaultUI: true,\n      });\n\n      let directionsDisplay = new maps.DirectionsRenderer();\n      let directionsService = new maps.DirectionsService();\n      calculateAndDisplayRoute(\n        new maps.LatLng(from.lat, from.lng),\n        new maps.LatLng(to.lat, to.lng),\n        directionsService,\n        directionsDisplay\n      );\n      directionsDisplay.setMap(map);\n      directionsDisplay.setOptions({\n        polylineOptions: {\n          strokeColor: \"#80B918CC\",\n          strokeWeight: \"8\",\n        },\n      });\n      directionsDisplay.setPanel(document.getElementById(\"run-path\"));\n    }\n    initialize();\n    function calculateAndDisplayRoute(\n      start,\n      end,\n      directionsService,\n      directionsDisplay\n    ) {\n      directionsService.route(\n        {\n          origin: start,\n          destination: end,\n          travelMode: maps.TravelMode.WALKING,\n        },\n        function (response, status) {\n          if (status === maps.DirectionsStatus.OK) {\n            directionsDisplay.setDirections(response);\n          } else {\n            window.alert(\"Directions request failed due to \" + status);\n          }\n        }\n      );\n    }\n  };\n\n  return (\n    <>\n      <div\n        id=\"run-path\"\n        style={{\n          height: \"400px\",\n          width: \"400px\",\n        }}\n      >\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: myKey,\n          }}\n          defaultCenter={{ lat: 43.6532, lng: -79.3832 }}\n          defaultZoom={zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default RouteMap;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport RouteMap from \"./RouteMap\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"../../styles/ShowRunInfo.css\";\n\nexport default function ShowRunInfo({ run, show, handleClose }) {\n  const zoom = 10;\n  const from = { lat: run.latitude, lng: run.longitude };\n  const to = { lat: run.latitude_to, lng: run.longitude_to };\n\n  return (\n    <>\n      <Modal\n        className=\"run-modal\"\n        show={show}\n        onHide={handleClose}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header className=\"route-modal-header\" closeButton>\n          <Modal.Title\n            id=\"contained-modal-title-vcenter\"\n            className=\"modal-title\"\n          >\n            {run.name}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"route-modal-message\">\n          <p>{run.description}</p>\n          <div className=\"run-info\">\n            <RouteMap zoom={zoom} from={from} to={to} />\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item as=\"h4\">Details & Route</ListGroup.Item>\n              <ListGroup.Item>\n                On {run.date} at {run.event_time}\n              </ListGroup.Item>\n              <ListGroup.Item>Start: {run.location}</ListGroup.Item>\n              <ListGroup.Item>Finish: {run.location_to}</ListGroup.Item>\n              <ListGroup.Item>Distance: {run.distance}km</ListGroup.Item>\n            </ListGroup>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={handleClose}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/Run.css\";\nimport JoinButton from \"./JoinButton\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport ShowRunInfo from \"../ShowRunInfo\";\n\nexport default function Run(props) {\n  const { run, type, canJoinRun, join } = props;\n  const [joinStatus, setJoinStatus] = useState(canJoinRun(run.id) || false);\n  const [time, setTime] = useState(\"\");\n  const [eventTime, setEventTime] = useState(\"\");\n\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const handleCloseInfoModal = () => {\n    setShowInfoModal(false);\n  };\n  const handleShowInfoModal = () => {\n    setShowInfoModal(true);\n  };\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      <p>Event on: {run.date}</p>\n      <p>Click for more</p>\n    </Tooltip>\n  );\n\n  useEffect(() => {\n    if (run.time !== 0 && type === \"attended\") {\n      setTime(`${run.time} min`);\n    }\n    if (run.future_run) {\n      setEventTime(`${run.date} at ${run.event_time}`);\n    }\n    if (!run.future_run) {\n      setEventTime(`Was on ${run.date} at ${run.event_time}`);\n    }\n  }, []);\n\n  return (\n    <>\n      <section className=\"run\">\n        <img\n          alt=\"Shows running space\"\n          className=\"run-image\"\n          src={`/api/runs/image/${run.id}`}\n        ></img>\n\n        <div className=\"run-body\">\n          <div className=\"run-heading\">\n            {type === \"available\" && (\n              <span id={`run-${run.id}`} className=\"run-id\">\n                {run.id}\n              </span>\n            )}\n            <h3>{run.name}</h3>\n\n            <OverlayTrigger\n              placement=\"left\"\n              delay={{ show: 250, hide: 50 }}\n              overlay={renderTooltip}\n            >\n              <button\n                type=\"button\"\n                className=\"detail-button\"\n                onClick={handleShowInfoModal}\n              >\n                Details\n              </button>\n            </OverlayTrigger>\n          </div>\n          <p>{run.description}</p>\n          <div className=\"run-desc\">\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item><strong>When:</strong> {eventTime}</ListGroup.Item>\n              <ListGroup.Item><strong>Distance:</strong> {run.distance} km</ListGroup.Item>\n              {time && <ListGroup.Item><strong>Recorded Time:</strong> {time}</ListGroup.Item>}\n            </ListGroup>\n            <JoinButton runType={type} joinStatus={joinStatus} join={join} />\n          </div>\n        </div>\n      </section>\n      <ShowRunInfo\n        run={run}\n        show={showInfoModal}\n        handleClose={handleCloseInfoModal}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function EmptyRuns(props) {\n  const navigate = useNavigate();\n  const [type, setType] = useState(\"\");\n\n  const handleClick = () => {\n    navigate(type.link);\n  };\n\n  useEffect(() => {\n    if (props.type === \"attended\")\n      setType({\n        link: \"/runs\",\n        action: \"Join\",\n        headingText:\n          \"You have not participated in any runs yet. See all available runs in your area.\",\n      });\n    if (props.type === \"planned\")\n      setType({\n        link: \"/create\",\n        action: \"Plan\",\n        headingText:\n          \"You have not planned any runs yet. Plan a new running event.\",\n      });\n  }, [props.type]);\n\n  return (\n    <>\n      <Container className=\"empty-runs-container\">\n        <h3>{type.headingText}</h3>\n        <Button\n          className=\"btn\"\n          variant=\"custom\"\n          onClick={handleClick}\n        >\n          {type.action}\n        </Button>\n      </Container>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function ProfileActions(props) {\n  const navigate = useNavigate();\n  const [action, setAction] = useState(\"\");\n\n  const handleClick = (link) => {\n    navigate(link);\n  };\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      {action}\n    </Tooltip>\n  );\n\n  return (\n    <>\n      <Container className=\"profile-actions\">\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 50 }}\n          overlay={renderTooltip}\n        >\n          <span\n            className=\"material-symbols-rounded\"\n            onClick={() => handleClick(\"/create\")}\n            onMouseEnter={()=>setAction(\"Plan A Run\")}\n          >\n            group_work\n          </span>\n        </OverlayTrigger>\n        <OverlayTrigger\n          placement=\"left\"\n          delay={{ show: 250, hide: 50 }}\n          overlay={renderTooltip}\n        >\n          <span\n            className=\"material-symbols-rounded\"\n            onClick={() => handleClick(\"/runs\")}\n            onMouseEnter={()=>setAction(\"Join A Run\")}\n          >\n            run_circle\n          </span>\n        </OverlayTrigger>\n      </Container>\n    </>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport Run from \"../Run\";\nimport EmptyRuns from \"./EmptyRuns\";\nimport ProfileActions from \"./ProfileActions\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Table from \"react-bootstrap/Table\";\nimport \"../../styles/Profile.css\";\nimport {\n  userState,\n  runnerRunsState,\n  plannerRunsState,\n} from \"../../hooks/useAppData\";\nimport { useRecoilValue } from \"recoil\";\nimport useAppData from \"../../hooks/useAppData\";\nimport profilePhoto from '../../images/profile-photo.jpeg';\n\nexport default function Profile() {\n  const user = useRecoilValue(userState);\n  const runnerRuns = useRecoilValue(runnerRunsState);\n  const plannerRuns = useRecoilValue(plannerRunsState);\n  const { joinRun, canJoinRun } = useAppData();\n  const [runData, setRunData] = useState({ distance: 0, minutes: 0, count: 0 });\n\n\n  const showRunnersRuns = (runs, type) => {\n    const runsArray = Object.values(runs);\n    if (runsArray.length === 0) return <EmptyRuns type={type} />;\n    return runsArray.map((run) => (\n      <Run\n        key={run.id}\n        run={run}\n        type={type}\n        join={joinRun}\n        canJoinRun={canJoinRun}\n      />\n    ));\n  };\n\n  const profilePicture = (\n    <img\n      className=\"profile-pic\"\n      src={profilePhoto}\n      alt=\"icon-profile\"\n    ></img>\n  );\n\n  useEffect(() => {\n    let distance = 0,\n      minutes = 0,\n      count = 0;\n    for (const key in runnerRuns) {\n      if (runnerRuns[key].future_run === false) {\n        distance += parseInt(runnerRuns[key].distance);\n        minutes += parseInt(runnerRuns[key].time);\n        count += 1;\n      }\n    }\n    setRunData({ distance, minutes, count });\n  }, [runnerRuns]);\n\n  return (\n    <main className=\"profile-section\">\n      <section className=\"profile-header\">\n        <div className=\"profile-info\">\n          <div className=\"profile-welcome\">\n            <div>\n              <h1>Welcome!</h1>\n              {user && <p>{user.name}</p>}\n            </div>\n            <ProfileActions />\n          </div>\n          <h4>YOU HAVE:</h4>\n          <Table size=\"sm\">\n            <thead>\n              <tr>\n                <th>RUN FOR</th>\n                <th>COVERED</th>\n                <th>ATTENDED</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  {runData.minutes}\n                  <span className=\"unit\">min</span>\n                </td>\n                <td>\n                  {runData.distance}\n                  <span className=\"unit\">km</span>\n                </td>\n                <td>\n                  {runData.count}\n                  <span className=\"unit\">runs</span>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n        {profilePicture}\n      </section>\n\n      <section className=\"profile-stats\">\n        <Tabs\n          defaultActiveKey=\"attended\"\n          id=\"profile-tab\"\n          className=\"mb-3\"\n          fill\n        >\n          <Tab eventKey=\"attended\" title=\"Attended\">\n            <section className=\"runs-tab\">\n              {runnerRuns && showRunnersRuns(runnerRuns, \"attended\")}\n            </section>\n          </Tab>\n          <Tab eventKey=\"planned\" title=\"Planned\">\n            <section className=\"runs-tab\">\n              {plannerRuns && showRunnersRuns(plannerRuns, \"planned\")}\n            </section>\n          </Tab>\n        </Tabs>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport \"../../styles/Marker.css\";\n\nconst Markers = ({ id, $hover, description, distance, date }) => {\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      <p>\n        {description}\n        {distance && ` (${distance}k)`}\n      </p>\n      <p>{date && `Date: ${date}`}</p>\n    </Tooltip>\n  );\n\n  return (\n    <OverlayTrigger\n      placement=\"left\"\n      delay={{ show: 100, hide: 100 }}\n      overlay={renderTooltip}\n    >\n      <a href={`#run-${id}`}>\n        <div\n          className={$hover ? \"circle hover\" : \"circle\"}\n        >\n          <span className=\"circleText\">\n            {id}\n          </span>\n        </div>\n      </a>\n    </OverlayTrigger>\n  );\n};\n\nexport default Markers;\n","import React, { useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Markers from \"./Markers\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { runsState } from \"../../hooks/useAppData\";\nimport \"../../styles/Map.css\";\nimport { userCoordinatesAtom } from \"../../hooks/userCoords\";\n\nconst DefaultMap = ({ center, zoom }) => {\n  // const runs = useRecoilValue(runsState);\n  const [currentLocation, setCurrentLocation] =\n    useRecoilState(userCoordinatesAtom);\n\n  // const showMarkers = (runs) => {\n  //   const runsArray = Object.values(runs);\n  //   return runsArray.map((run) => (\n  //     <Markers\n  //       key={run.id}\n  //       id={run.id}\n  //       name={run.name}\n  //       description={run.name}\n  //       distance={run.distance}\n  //       date={run.date}\n  //       lat={run.latitude}\n  //       lng={run.longitude}\n  //     />\n  //   ));\n  // };\n\n  const myKey = process.env.REACT_APP_MAP_API_KEY;\n  useEffect(() => {\n    function getLocation() {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCurrentLocation({ lat: latitude, lng: longitude });\n      });\n    }\n    getLocation();\n  }, []);\n  return (\n    <>\n      <div className=\"map\" style={{ height: \"80vh\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: myKey,\n          }}\n          defaultCenter={{ lat: 43.6532, lng: -79.3832 }}\n          center={currentLocation}\n          defaultZoom={zoom}\n        >\n          <Markers\n            lat={center.lat}\n            lng={center.lng}\n            id=\"Me\"\n            description=\"You are here!\"\n          />\n          {/* {showMarkers(runs)} */}\n        </GoogleMapReact>\n      </div>\n    </>\n  );\n};\n\nexport default DefaultMap;\n","import React from \"react\";\nimport \"../../styles/Map.css\";\nimport { useRecoilValue } from \"recoil\";\nimport { userCoordinatesAtom } from \"../../hooks/userCoords\";\nimport { Link } from \"react-router-dom\";\nimport DefaultMap from \"./DefaultMap\";\n\n\nexport default function Map() {\n  const center = useRecoilValue(userCoordinatesAtom);\n  const zoom = 10;\n\n  return (\n    <>\n      <div className=\"map-container\" style={{ height: \"85vh\", width: \"100%\" }}>\n        <section className=\"map-info\">\n          <h2>Search</h2>\n          <p>\n            Find a run near you. Hover on the orange dots to see details about\n            each run. Click to go to the run. You can also see a full list\n            below.\n          </p>\n          <a href=\"#available-runs\">\n            <span className=\"material-symbols-rounded\">\n              expand_more\n            </span>\n          </a>\n          <p>Can't find a run near you? Plan one <Link to=\"/create\">here</Link>.</p>\n        </section>\n        <DefaultMap center={center} zoom={zoom} />\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useNavigate } from \"react-router-dom\";\nimport logo from \"../images/main-logo.png\";\n\nexport default function JoiningStatus(props) {\n  const { joinButtonPressed, setJoinButtonPressed } = props;\n  const { text } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (joinButtonPressed === true) {\n      let timer = setTimeout(() => {\n        setJoinButtonPressed(false);\n        navigate(\"/profile\");\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [joinButtonPressed]);\n\n  const logoImage = (\n    <img\n      className=\"logo-status\"\n      src={logo}\n      width=\"50em\"\n      height=\"auto\"\n      style={{margin:\"0 40px\"}}\n      alt=\"logo on status spinner\"\n    ></img>\n  );\n\n  return (\n    <>\n      <Modal\n        className=\"joining-status-modal\"\n        size=\"lg\"\n        show={joinButtonPressed}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header className=\"joining-status-header\">\n          {logoImage}\n          <Modal.Title>THANK YOU FOR {text} A RUN!</Modal.Title>\n          {logoImage}\n        </Modal.Header>\n        <Modal.Body className=\"joining-status-message\">\n          <p>\n            You will now be directed to your profile page. You will receive a\n            text message confirming the address of the run and other relevant\n            information!\n          </p>\n          <p>Reach out to us for more information at hello@werun.com.</p>\n          <Spinner className=\"status-spinner\" animation=\"border\" />\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Run from \"../Run\";\nimport Map from \"../Map\";\nimport JoiningStatus from \"../JoiningStatus\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { userState, runsState } from \"../../hooks/useAppData\";\nimport useAppData from \"../../hooks/useAppData\";\nimport \"../../styles/FindRun.css\";\n\nexport default function FindRun() {\n  // const runs = useRecoilValue(runsState);\n  // const user = useRecoilValue(userState);\n  // const { joinRun, canJoinRun } = useAppData();\n  // const navigate = useNavigate();\n  // const [joinButtonPressed, setJoinButtonPressed] = useState(false);\n\n  // const join = (user_id, run_id) => {\n  //   // Check if joining is possible\n  //   if (!canJoinRun(run_id)) {\n  //     console.log(\"You cannot join this run.\");\n  //     navigate(\"/\");\n  //     return;\n  //   }\n  //   // Join if possible\n  //   joinRun(user_id, run_id).then((response) => {\n  //     if (response) {\n  //       setJoinButtonPressed(true);\n  //     }\n  //   });\n  // };\n\n  // const showAvailableRuns = (runs, type) => {\n  //   const runsArray = Object.values(runs);\n  //   return runsArray.map((run) => {\n  //     return (\n  //       run.future_run && (\n  //         <Run\n  //           key={run.id}\n  //           run={run}\n  //           type={type}\n  //           join={() => join(user.id, run.id)}\n  //           canJoinRun={canJoinRun}\n  //         />\n  //       )\n  //     );\n  //   });\n  // };\n\n  return (\n    <>\n      <section id=\"find-run-page\">\n        <Map />\n        <section id=\"available-runs\">\n          <h2>Available right now</h2>\n          <p>\n            Our runs are about being inclusive, community and wellbeing. Our\n            mission is for people to feel part of a real local community brought\n            together by physical activity, as well as our national weRun family\n            across Canada. If you can't find an event near you, you can register\n            with weRun and plan your own.\n          </p>\n        </section>\n        {/* {showAvailableRuns(runs, \"available\")} */}\n      </section>\n      {/* {user && (\n        <JoiningStatus\n          joinButtonPressed={joinButtonPressed}\n          setJoinButtonPressed={setJoinButtonPressed}\n          text=\"JOINING\"\n        />\n      )} */}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/RegisterUser.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useNavigate } from \"react-router-dom\";\nimport useAppData from \"../hooks/useAppData\";\n\nexport default function RegisterUser() {\n  \n  const { registerUser } = useAppData();\n\n  const [userData, setUserData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    phone: \"\",\n    age: \"\",\n    runner: false,\n    planner: false,\n  });\n  const handleChange = (e) => {\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n  };\n\n  const handleCheckboxChange = (e) => {\n    const prev = userData[e.target.name];\n    setUserData({ ...userData, [e.target.name]: !prev });\n  };\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    registerUser(userData);\n    navigate(\"/profile\");\n  };\n\n  const genderSelector = () => {\n    return (\n      <>\n        <Form.Text id=\"profileHelpBlock\" muted>\n          Gender:\n        </Form.Text>\n        <Form.Group\n          name=\"gender\"\n          className=\"mb-3\"\n          controlId=\"formBasicCheckbox\"\n          aria-describedby=\"profileHelpBlock\"\n        >\n          {[\"he/Him\", \"she/Her\", \"they/Them\", \"I prefer not to say\"].map(\n            (label, index) => {\n              return (\n                <Form.Check\n                  required\n                  inline\n                  key={label}\n                  label={label}\n                  name=\"gender\"\n                  type=\"radio\"\n                  id={`inline-radio-${index}`}\n                  value={label}\n                  checked={userData.gender === label}\n                  onChange={handleChange}\n                />\n              );\n            }\n          )}\n        </Form.Group>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"forms\">\n      <Form\n        className=\"form-container\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"form-container-text\">\n          <Form.Text as=\"h3\">HI THERE, RUNNER!</Form.Text>\n          <Form.Text as=\"p\">\n            Create an account with us to use weRun and join runs with people\n            from all over Canada.\n          </Form.Text>\n        </div>\n        <FloatingLabel controlId=\"floatingInput\" label=\"Name\" className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Firstname / Lastname\"\n            name=\"name\"\n            value={userData.name}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Enter your name.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n        <FloatingLabel controlId=\"floatingInput\" label=\"Email\" className=\"mb-3\">\n          <Form.Control\n            required\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"name@example.com\"\n            value={userData.email}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Enter a valid email address.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n        <FloatingLabel\n          controlId=\"floatingPassword\"\n          label=\"Password\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={userData.password}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Cool password!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Enter a valid password.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n        <Row>\n          <Col>\n            <FloatingLabel controlId=\"phone\" label=\"Phone\" className=\"mb-3\">\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Phone\"\n                name=\"phone\"\n                value={userData.phone}\n                onChange={handleChange}\n              />\n              <Form.Control.Feedback>Got it!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid phone number.\n              </Form.Control.Feedback>\n            </FloatingLabel>\n          </Col>\n          <Col>\n            <FloatingLabel\n              controlId=\"floatingInput\"\n              label=\"Age\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Age\"\n                name=\"age\"\n                value={userData.age}\n                onChange={handleChange}\n              />\n              <Form.Control.Feedback>\n                You're getting old..\n              </Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid age.\n              </Form.Control.Feedback>\n            </FloatingLabel>{\" \"}\n          </Col>\n        </Row>\n\n        {genderSelector()}\n        <Form.Text id=\"profileHelpBlock\" muted>\n          Pick atleast 1:\n        </Form.Text>\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicCheckbox\"\n          aria-describedby=\"profileHelpBlock\"\n        >\n          <Form.Check\n            inline\n            label=\"Runner\"\n            type=\"checkbox\"\n            id={`inline-checkbox-1`}\n            name=\"runner\"\n            checked={userData.runner}\n            onChange={handleCheckboxChange}\n          />\n          <Form.Check\n            inline\n            label=\"Planner\"\n            type=\"checkbox\"\n            id={`inline-checkbox-2`}\n            name=\"planner\"\n            checked={userData.planner}\n            onChange={handleCheckboxChange}\n          />\n        </Form.Group>\n       \n        <Button variant=\"custom\" type=\"submit\" className=\"btn\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/Homepage.css\";\nimport logo from \"../images/large-logo.svg\";\nimport squareLogo from \"../images/rectangle-logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Homepage() {\n  return (\n    <div>\n      <div className=\"home\">\n        <div>\n          <div className=\"home-intro\">\n            <h2>Welcome to weRun!</h2>\n            <p>\n              We organise free, weekly, timed, community events all over Canada.\n              Get connected to runs near you today. Bring a buddy!\n            </p>\n          </div>\n          <div className=\"home-actions\">\n            <Link className=\"home-join\" to=\"/runs\">\n              <div className=\"underline\">Find</div>\n              <p>Search for local running events</p>\n            </Link>\n            <Link className=\"home-plan\" to=\"/create\">\n              <div className=\"underline\">Plan</div>\n              <p>Create a new running event</p>\n            </Link>\n          </div>\n        </div>\n        <div className=\"logo-container\">\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <img src={squareLogo} className=\"square-logo\" alt=\"logo\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport useAppData from \"../hooks/useAppData\";\nimport { userState } from \"../hooks/useAppData\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/RegisterUser.css\";\n\nexport default function SignIn() {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { login } = useAppData();\n  const setUser = useSetRecoilState(userState);\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(email, password)\n    .then((status)=>{\n      status && navigate(`/profile`);\n    })\n  };\n\n  return (\n    <div className=\"forms\">\n      <Form className=\"form-container sign-in text-center\" onSubmit={handleSubmit}>\n        <div className=\"form-container-text\">\n          <Form.Text as=\"h3\">WELCOME BACK, RUNNER!</Form.Text>\n          <Form.Text as=\"p\">Sign in to see all your running events.</Form.Text>\n        </div>\n        <FloatingLabel controlId=\"floatingInput\" label=\"Email\" className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"name@example.com\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </FloatingLabel>\n        <FloatingLabel\n          controlId=\"floatingPassword\"\n          label=\"Password\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </FloatingLabel>\n        <Button variant=\"custom\" type=\"submit\" className=\"btn\">\n          Sign In\n        </Button>\n        <Form.Text as=\"div\" className=\"text-center mb-2 mt-4\">Don't have an account? Create one <Link to=\"/register\">here</Link>.</Form.Text>\n      </Form>\n    </div>\n  );\n}\n","import { usePlacesWidget } from \"react-google-autocomplete\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default function AutoComplete(props) {\n  const myKey = process.env.REACT_APP_MAP_API_KEY;\n  const { setAddress } = props;\n  const { ref: locationRef } = usePlacesWidget({\n    apiKey: myKey,\n    onPlaceSelected: (place) => {\n      setAddress(\n        place.formatted_address,\n        place.geometry.location.lat(),\n        place.geometry.location.lng()\n      );\n    },\n    options: {\n      types: [\"park\"],\n      componentRestrictions: { country: \"ca\" },\n      fields: [\"name\", \"formatted_address\", \"geometry\"],\n    },\n    inputAutocompleteValue: \"text\",\n  });\n  return (\n    <>\n      <Form.Control\n        required\n        type=\"text\"\n        ref={locationRef}\n        placeholder=\"something\"\n        autoComplete=\"text\"\n      />\n    </>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../styles/RegisterUser.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport JoiningStatus from \"../JoiningStatus\";\nimport DatePicker from \"react-datepicker\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { userState } from \"../../hooks/useAppData\";\nimport useAppData from \"../../hooks/useAppData\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AutoComplete from \"./AutoComplete\";\n\nexport default function RegisterRun() {\n\n  //Get user and update form state\n  const user = useRecoilValue(userState);\n  const [joinButtonPressed, setJoinButtonPressed] = useState(false);\n\n  const [runData, setRunData] = useState({\n    planner_id: \"\",\n    name: \"\",\n    description: \"\",\n    distance: \"\",\n    time: `${new Date().getHours()}:${new Date().getMinutes()}`,\n    date: new Date(),\n    file: \"\",\n    lat: \"\",\n    lng: \"\",\n    address: \"\",\n    lat_to: \"\",\n    lng_to: \"\",\n    address_to: \"\",\n  });\n\n\n  const navigate = useNavigate();\n  const { createRun } = useAppData();\n\n  const handleChange = (e) => {\n    setRunData({ ...runData, [e.target.name]: e.target.value });\n  };\n\n //Submit to database\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //form validity\n    // const form = e.currentTarget;\n    // if (form.checkValidity() === false) {\n    //   e.preventDefault();\n    //   e.stopPropagation();\n    // }\n\n    //send data\n    const response = createRun({ ...runData });\n    response && setJoinButtonPressed(true);\n    \n    // setValidated(true)\n    // if (validated)\n\n  };\n\n  const datePick = () => {\n    return (\n      <Form.Group controlId=\"date\" className=\"mb-3\" style={{ width: \"100%\" }}>\n        <Form.Label>Date</Form.Label>\n        <DatePicker\n          className=\"date-picker\"\n          required\n          name=\"date\"\n          selected={runData.date}\n          onChange={(date) => setRunData({ ...runData, date: date })}\n          key={runData.date}\n        />\n      </Form.Group>\n    );\n  };\n\n  const distanceSelector = () => {\n    return (\n      <div className=\"mb-3\">\n        {[2, 5, 10].map((label, index) => {\n          return (\n            <Form.Check\n              required\n              key={label}\n              inline\n              type=\"radio\"\n              id={`inline-radio-1-${index}`}\n              label={`${label}k`}\n              value={label}\n              name=\"distance\"\n              onChange={handleChange}\n            />\n          );\n        })}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/signin\");\n    }\n    if (user) {\n      setRunData({ ...runData, planner_id: user.id });\n    }\n  }, []);\n\n  return (\n    <div className=\"forms\">\n      <Form\n        className=\"form-container\"\n        encType=\"multipart/form-data\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"form-container-text\">\n          <Form.Text as=\"h3\">Create a Run</Form.Text>\n          <Form.Text as=\"p\">\n            Don't see a run event near you? Just tell us where and when and the\n            rest is on us.\n          </Form.Text>\n        </div>\n        <FloatingLabel controlId=\"name\" label=\"Name\" className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={runData.name}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Enter a name for the run.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n        <FloatingLabel\n          controlId=\"description\"\n          label=\"Description\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            as=\"textarea\"\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={runData.description}\n            onChange={handleChange}\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Write a short description including directions, necessary\n            information, etc.\n          </Form.Control.Feedback>\n        </FloatingLabel>\n\n        <Row>\n          <Col>\n            <FloatingLabel\n              controlId=\"location\"\n              label=\"From...\"\n              className=\"mb-3\"\n            >\n              <AutoComplete\n                setAddress={(address, lat, lng) =>\n                  setRunData((prev) => {\n                    return { ...prev, address: address, lat: lat, lng: lng };\n                  })\n                }\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid address.\n              </Form.Control.Feedback>\n            </FloatingLabel>\n          </Col>\n          <Col>\n            <FloatingLabel controlId=\"location\" label=\"To...\" className=\"mb-3\">\n              <AutoComplete\n                setAddress={(address, lat, lng) =>\n                  setRunData((prev) => {\n                    return {\n                      ...prev,\n                      address_to: address,\n                      lat_to: lat,\n                      lng_to: lng,\n                    };\n                  })\n                }\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid address.\n              </Form.Control.Feedback>\n            </FloatingLabel>\n          </Col>\n        </Row>\n        <Form.Group controlId=\"distance\" className=\"mb-3\">\n          <Form.Label>Distance</Form.Label>\n          {distanceSelector()}\n        </Form.Group>\n\n        <Row>\n          <Col>{datePick()}</Col>\n          <Col>\n            <Form.Group controlId=\"time\" className=\"mb-3\">\n              <Form.Label>Time</Form.Label>\n              <Form.Control\n                required\n                key={runData.time}\n                type=\"time\"\n                name=\"time\"\n                placeholder=\"Time\"\n                value={runData.time}\n                onChange={(event) =>\n                  setRunData({ ...runData, time: event.target.value })\n                }\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">\n                Enter a valid time.\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n        </Row>\n        <Form.Group controlId=\"formFileLg\" className=\"mb-3\">\n          <Form.Label>Upload an image</Form.Label>\n          <Form.Control\n            required\n            name=\"file\"\n            type=\"file\"\n            onChange={(e) =>\n              setRunData({ ...runData, file: e.target.files[0] })\n            }\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n            Upload an image for this run.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button variant=\"custom\" type=\"submit\" className=\"btn\">\n          Create\n        </Button>\n      </Form>\n      <JoiningStatus\n          joinButtonPressed={joinButtonPressed}\n          setJoinButtonPressed={setJoinButtonPressed}\n          text=\"PLANNING\"\n        />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { userState } from \"../hooks/useAppData\";\nimport useAppData from \"../hooks/useAppData\";\nimport \"../styles/Navigation.css\";\nimport logo from \"../images/main-logo.png\";\n\nexport default function Navigation() {\n  const user = useRecoilValue(userState);\n  const navigate = useNavigate();\n  const { logout } = useAppData();\n\n  const signOut = () => {\n    logout().then((status) => {\n      if (status === null) {\n        navigate(\"/\");\n      }\n    });\n  };\n\n  return (\n    <Navbar id=\"navigation\" bg=\"light\" expand=\"lg\">\n      <Container fluid>\n        <Link className=\"navbar-brand\" to=\"/\">\n          <img\n            src={logo}\n            className=\"d-inline-block align-top\"\n            alt=\"logo\"\n          />\n        </Link>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav\n            className=\"me-auto my-2 my-lg-0\"\n            style={{ maxHeight: \"100px\" }}\n            navbarScroll\n          >\n            <Link className=\"nav-link\" to=\"/\">\n              Home\n            </Link>\n            <Link className=\"nav-link\" to=\"/runs\">\n              Join A Run\n            </Link>\n          </Nav>\n          <Nav pullRight>\n            {user === null && (\n              <Link className=\"nav-link\" to=\"/signin\">\n                Sign In\n              </Link>\n            )}\n            {user === null && (\n              <Link className=\"nav-link\" to=\"/register\">\n                Sign Up\n              </Link>\n            )}\n\n            {user !== null && (\n              <Link className=\"nav-link\" to=\"/profile\">\n                Profile\n              </Link>\n            )}\n            {user !== null && (\n              <Link className=\"nav-link\" to=\"#\" onClick={signOut}>\n                Sign Out\n              </Link>\n            )}\n\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"./components/Navigation\";\nimport { Outlet } from \"react-router-dom\";\nrequire(\"dotenv\").config();\n\nexport default function App() {\n  return (\n    <div>\n      <Navigation />\n      <Outlet />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Profile from \"./components/Profile\";\nimport FindRun from \"./components/FindRun\";\nimport RegisterUser from \"./components/RegisterUser\";\nimport Homepage from \"./components/Homepage.jsx\";\nimport SignIn from \"./components/SignIn\";\nimport RegisterRun from \"./components/RegisterRun\";\nimport App from \"./App\";\n\nimport {\n  createRoutesFromElements,\n  createBrowserRouter,\n  createHashRouter,\n  Route,\n} from \"react-router-dom\";\nimport ShowRunInfo from \"./components/ShowRunInfo\";\n\nexport const router = createHashRouter(\n  createRoutesFromElements(\n    <Route path=\"/\" element={<App />}>\n      <Route index element={<Homepage />} />\n      {/* <Route path=\"/werun/\" element={<Homepage />} /> */}\n      <Route path=\"/profile\" element={<Profile />} />\n      <Route path=\"/runs\" element={<FindRun />} />\n      <Route path=\"/register\" element={<RegisterUser />} />\n      <Route path=\"/create\" element={<RegisterRun />}/>\n      <Route path=\"/signin\" element={<SignIn />} />\n      <Route path=\"/run-info\" element={<ShowRunInfo />} />\n    </Route>\n  )\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { RecoilRoot } from \"recoil\";\nimport { RouterProvider } from \"react-router-dom\";\nimport { router } from \"./AppRouter\";\n\nReactDOM.render(\n  <RecoilRoot>\n    <RouterProvider router={router} />\n  </RecoilRoot>,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}